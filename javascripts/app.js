(function(/*! Brunch !*/) {
  'use strict';

  var globals = typeof window !== 'undefined' ? window : global;
  if (typeof globals.require === 'function') return;

  var modules = {};
  var cache = {};

  var has = function(object, name) {
    return ({}).hasOwnProperty.call(object, name);
  };

  var expand = function(root, name) {
    var results = [], parts, part;
    if (/^\.\.?(\/|$)/.test(name)) {
      parts = [root, name].join('/').split('/');
    } else {
      parts = name.split('/');
    }
    for (var i = 0, length = parts.length; i < length; i++) {
      part = parts[i];
      if (part === '..') {
        results.pop();
      } else if (part !== '.' && part !== '') {
        results.push(part);
      }
    }
    return results.join('/');
  };

  var dirname = function(path) {
    return path.split('/').slice(0, -1).join('/');
  };

  var localRequire = function(path) {
    return function(name) {
      var dir = dirname(path);
      var absolute = expand(dir, name);
      return globals.require(absolute);
    };
  };

  var initModule = function(name, definition) {
    var module = {id: name, exports: {}};
    definition(module.exports, localRequire(name), module);
    var exports = cache[name] = module.exports;
    return exports;
  };

  var require = function(name) {
    var path = expand(name, '.');

    if (has(cache, path)) return cache[path];
    if (has(modules, path)) return initModule(path, modules[path]);

    var dirIndex = expand(path, './index');
    if (has(cache, dirIndex)) return cache[dirIndex];
    if (has(modules, dirIndex)) return initModule(dirIndex, modules[dirIndex]);

    throw new Error('Cannot find module "' + name + '"');
  };

  var define = function(bundle, fn) {
    if (typeof bundle === 'object') {
      for (var key in bundle) {
        if (has(bundle, key)) {
          modules[key] = bundle[key];
        }
      }
    } else {
      modules[bundle] = fn;
    }
  };

  globals.require = require;
  globals.require.define = define;
  globals.require.register = define;
  globals.require.brunch = true;
})();

window.require.register("application", Function('exports, require, module', "var Application, Chaplin, Layout, mediator, routes, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nChaplin = require('chaplin');\n\nLayout = require('views/layout');\n\nmediator = require('mediator');\n\nroutes = require('routes');\n\nmodule.exports = Application = (function(_super) {\n  __extends(Application, _super);\n\n  function Application() {\n    _ref = Application.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  Application.prototype.title = 'shiny wight';\n\n  Application.prototype.initialize = function() {\n    Application.__super__.initialize.apply(this, arguments);\n    this.initDispatcher({\n      controllerSuffix: '-controller'\n    });\n    this.initLayout();\n    this.initMediator();\n    this.initControllers();\n    this.initRouter(routes);\n    this.initGameSpecificStuff();\n    return typeof Object.freeze === \"function\" ? Object.freeze(this) : void 0;\n  };\n\n  Application.prototype.initLayout = function() {\n    return this.layout = new Layout({\n      title: this.title\n    });\n  };\n\n  Application.prototype.initControllers = function() {};\n\n  Application.prototype.initMediator = function() {\n    mediator.map = null;\n    mediator.factory = {};\n    mediator.entities = [];\n    return mediator.seal();\n  };\n\n  Application.prototype.initGameSpecificStuff = function() {\n    return (function() {\n      var lastTime, vendors, x;\n\n      lastTime = 0;\n      vendors = [\"ms\", \"moz\", \"webkit\", \"o\"];\n      x = 0;\n      while (x < vendors.length && !window.requestAnimationFrame) {\n        window.requestAnimationFrame = window[vendors[x] + \"RequestAnimationFrame\"];\n        window.cancelAnimationFrame = window[vendors[x] + \"CancelAnimationFrame\"] || window[vendors[x] + \"CancelRequestAnimationFrame\"];\n        ++x;\n      }\n      if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = function(callback, element) {\n          var currTime, id, timeToCall;\n\n          currTime = new Date().getTime();\n          timeToCall = Math.max(0, 16 - (currTime - lastTime));\n          id = window.setTimeout(function() {\n            return callback(currTime + timeToCall);\n          }, timeToCall);\n          lastTime = currTime + timeToCall;\n          return id;\n        };\n      }\n      if (!window.cancelAnimationFrame) {\n        return window.cancelAnimationFrame = function(id) {\n          return clearTimeout(id);\n        };\n      }\n    })();\n  };\n\n  return Application;\n\n})(Chaplin.Application);\n\n//@ sourceURL=application.coffee"));
window.require.register("controllers/base/controller", Function('exports, require, module', "var Chaplin, Controller, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nChaplin = require('chaplin');\n\nmodule.exports = Controller = (function(_super) {\n  __extends(Controller, _super);\n\n  function Controller() {\n    _ref = Controller.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  return Controller;\n\n})(Chaplin.Controller);\n\n//@ sourceURL=controllers/base/controller.coffee"));
window.require.register("controllers/home-controller", Function('exports, require, module', "var Controller, HomeController, HomePageView, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nController = require('controllers/base/controller');\n\nHomePageView = require('views/home-page-view');\n\nmodule.exports = HomeController = (function(_super) {\n  __extends(HomeController, _super);\n\n  function HomeController() {\n    _ref = HomeController.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  HomeController.prototype.index = function() {\n    return this.view = new HomePageView({\n      gMap: this.gMap\n    });\n  };\n\n  return HomeController;\n\n})(Controller);\n\n//@ sourceURL=controllers/home-controller.coffee"));
window.require.register("initialize", Function('exports, require, module', "var Application;\n\nApplication = require('application');\n\n$(function() {\n  var app;\n\n  app = new Application();\n  return app.initialize();\n});\n\n//@ sourceURL=initialize.coffee"));
window.require.register("lib/support", Function('exports, require, module', "var Chaplin, support, utils;\n\nChaplin = require('chaplin');\n\nutils = require('lib/utils');\n\nsupport = utils.beget(Chaplin.support);\n\nmodule.exports = support;\n\n//@ sourceURL=lib/support.coffee"));
window.require.register("lib/utils", Function('exports, require, module', "var Chaplin, utils;\n\nChaplin = require('chaplin');\n\nutils = Chaplin.utils.beget(Chaplin.utils);\n\nmodule.exports = utils;\n\n//@ sourceURL=lib/utils.coffee"));
window.require.register("lib/view-helper", Function('exports, require, module', "var mediator,\n  __slice = [].slice;\n\nmediator = require('mediator');\n\nHandlebars.registerHelper('with', function(context, options) {\n  if (!context || Handlebars.Utils.isEmpty(context)) {\n    return options.inverse(this);\n  } else {\n    return options.fn(context);\n  }\n});\n\nHandlebars.registerHelper('without', function(context, options) {\n  var inverse;\n\n  inverse = options.inverse;\n  options.inverse = options.fn;\n  options.fn = inverse;\n  return Handlebars.helpers[\"with\"].call(this, context, options);\n});\n\nHandlebars.registerHelper('url', function() {\n  var params, routeName, url;\n\n  routeName = arguments[0], params = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n  url = null;\n  mediator.publish('!router:reverse', routeName, params, function(result) {\n    return url = result;\n  });\n  return \"/\" + url;\n});\n\n//@ sourceURL=lib/view-helper.coffee"));
window.require.register("mediator", Function('exports, require, module', "module.exports = require('chaplin').mediator;\n\n//@ sourceURL=mediator.coffee"));
window.require.register("models/DeadEntity", Function('exports, require, module', "var DeadEntity, VisibleEntity, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nVisibleEntity = require('models/VisibleEntity');\n\nmodule[\"extends\"] = DeadEntity = (function(_super) {\n  __extends(DeadEntity, _super);\n\n  function DeadEntity() {\n    _ref = DeadEntity.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  return DeadEntity;\n\n})(VisibleEntity);\n\n//@ sourceURL=models/DeadEntity.coffee"));
window.require.register("models/Entity", Function('exports, require, module', "var Entity, Model, mediator, _ref,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nModel = require('models/base/model');\n\nmediator = require('mediator');\n\n/*\nBase class for all entities\n\n@example How to subclass Entity\n  module.exports = class VisibleEntity extends Entity\n    onAction: (object): ->\n      # do something\n*/\n\n\nmodule.exports = Entity = (function(_super) {\n  __extends(Entity, _super);\n\n  function Entity() {\n    this.moveLeft = __bind(this.moveLeft, this);\n    this.moveRight = __bind(this.moveRight, this);\n    this.moveDown = __bind(this.moveDown, this);\n    this.moveUp = __bind(this.moveUp, this);\n    this.update = __bind(this.update, this);\n    this.onAction = __bind(this.onAction, this);\n    this.updateViewAndMove = __bind(this.updateViewAndMove, this);    _ref = Entity.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  /*\n  @property [Object] The entity's position\n  @option position [Integer] x x coordinate\n  */\n\n\n  Entity.prototype.position = {\n    x: 0,\n    y: 0\n  };\n\n  /*\n  @property [Integer]\n  What sprite to draw\n  */\n\n\n  Entity.prototype.animationStep = 0;\n\n  /*\n  @property [Integer]\n  In what direction the entity looks\n  \n      0:up\n      1:right\n      2:down\n      3:left\n  */\n\n\n  Entity.prototype.viewDirection = 0;\n\n  /*\n  @private\n  Initializes the new Entity.\n  Will try to get the map from the mediator.\n  @note Make sure to call `TILEDMap.load(path)` before instantiating any Entities.\n  */\n\n\n  Entity.prototype.initialize = function() {\n    return this.map = mediator.map;\n  };\n\n  /*\n  @private\n  @param [Integer] vd\n    the view direction. Can be one of 0, 1, 2 or 3.\n  @see [Entity#viewDirection]\n  Updates the animationStep counter and viewDirection.\n  If the entity goes into the same direction, only update animationStep\n  If not it will reset the animationStep counter and update the viewDirection\n  */\n\n\n  Entity.prototype.updateViewAndMove = function(vd) {\n    if (this.viewDirection !== vd) {\n      this.animationStep = 1;\n      return this.viewDirection = vd;\n    } else {\n      return this.animationStep++;\n    }\n  };\n\n  /*\n  Is called if the Player stands in front of this Entity and want's to interact with it.\n  @param [Object] player\n    The Player.\n  */\n\n\n  Entity.prototype.onAction = function(player) {};\n\n  /*\n  Is called each tick/frame.\n  */\n\n\n  Entity.prototype.update = function() {};\n\n  /*\n  Move the Entity one tile upwards.\n  @note It won't let `@position.y` be negative.\n  */\n\n\n  Entity.prototype.moveUp = function() {\n    this.position.y--;\n    if (this.position.y < 0) {\n      this.position.y = 0;\n    }\n    mediator.publish('play', 'test');\n    return this.updateViewAndMove(0);\n  };\n\n  /*\n  Move the Entity one tile downwards.\n  It won't let @position.y be larger than map.numYTiles.\n  @note This method relies on `mediator.map` being set\n  */\n\n\n  Entity.prototype.moveDown = function() {\n    var numYTiles;\n\n    numYTiles = this.map.get('numYTiles');\n    this.position.y++;\n    if (position.y > numYTiles) {\n      this.position.y = numYTiles;\n    }\n    return this.updateViewAndMove(2);\n  };\n\n  /*\n  Move the Entity one tile to the right.\n  It won't let @position.y be larger than map.numXTiles.\n  @note This method relies on `mediator.map` being set\n  */\n\n\n  Entity.prototype.moveRight = function() {\n    var numXTiles;\n\n    numXTiles = this.map.get('numXTiles');\n    this.position.x++;\n    if (position.x > numXTiles) {\n      this.position.x = numXTiles;\n    }\n    return this.updateViewAndMove(1);\n  };\n\n  /*\n  Move the Entity one tile upwards.\n  @note It won't let `@position.x` be negative.\n  */\n\n\n  Entity.prototype.moveLeft = function() {\n    this.position.x--;\n    if (position.x < 0) {\n      this.position.x = 0;\n    }\n    return this.updateViewAndMove(3);\n  };\n\n  return Entity;\n\n})(Model);\n\n//@ sourceURL=models/Entity.coffee"));
window.require.register("models/InputManager", Function('exports, require, module', "var InputManager, Model, _ref,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nModel = require('models/base/model');\n\nmodule.exports = InputManager = (function(_super) {\n  __extends(InputManager, _super);\n\n  function InputManager() {\n    this.bind = __bind(this.bind, this);\n    this.onKeyUpEvent = __bind(this.onKeyUpEvent, this);\n    this.onKeyDownEvent = __bind(this.onKeyDownEvent, this);\n    this.initialize = __bind(this.initialize, this);    _ref = InputManager.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  InputManager.prototype.defaults = {\n    bindings: {},\n    actions: {},\n    presses: {},\n    locks: {},\n    delayedKeyup: [],\n    keyCodes: {\n      'a': 65,\n      'w': 87,\n      'd': 68,\n      's': 83,\n      'enter': 13,\n      'escape': 27,\n      'space': 32\n    }\n  };\n\n  InputManager.prototype.initialize = function() {\n    var keyCodes;\n\n    keyCodes = this.get('keyCodes');\n    this.bind(keyCodes['w'], 'move-up');\n    this.bind(keyCodes['a'], 'move-left');\n    this.bind(keyCodes['s'], 'move-down');\n    this.bind(keyCodes['d'], 'move-right');\n    this.bind(keyCodes['enter'], 'interact');\n    this.bind(keyCodes['space'], 'interact');\n    this.bind(keyCodes['escape'], 'cancel');\n    window.addEventListener('keydown', this.onKeyDownEvent);\n    return window.addEventListener('keyup', this.onKeyUpEvent);\n  };\n\n  /*\n  Set the corresponding action in the actions array to true\n  \n      Pressing `w` will set `move-up` to true on an qwerty keyboard\n  @params [Event] event Event Object\n  */\n\n\n  InputManager.prototype.onKeyDownEvent = function(event) {\n    var action, actions, bindings, code;\n\n    bindings = this.get('bindings');\n    actions = this.get('actions');\n    code = event['keyCode'];\n    action = bindings[code];\n    if (action) {\n      actions[action] = true;\n    }\n    return this.set({\n      'actions': actions\n    });\n  };\n\n  /*\n  Set the corresponding action in the actions array to false\n  \n      Releasing `w` will set `move-up` to false on an qwerty keyboard\n  @params [Event] event Event Object\n  */\n\n\n  InputManager.prototype.onKeyUpEvent = function(event) {\n    var action, actions, bindings, code;\n\n    bindings = this.get('bindings');\n    actions = this.get('actions');\n    code = event['keyCode'];\n    action = bindings[code];\n    if (action) {\n      actions[action] = false;\n    }\n    return this.set({\n      'actions': actions\n    });\n  };\n\n  /*\n  Bind a key code to an action.\n  @example How to bind `w` to the `move-up` action\n    @bind 87, 'move-up'\n  */\n\n\n  InputManager.prototype.bind = function(key, action) {\n    var bindings;\n\n    bindings = this.get('bindings');\n    return bindings[key] = action;\n  };\n\n  return InputManager;\n\n})(Model);\n\n//@ sourceURL=models/InputManager.coffee"));
window.require.register("models/InvisibleEntity", Function('exports, require, module', "var Entity, InvisibleEntity, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nEntity = require('models/Entity');\n\nmodule.exports = InvisibleEntity = (function(_super) {\n  __extends(InvisibleEntity, _super);\n\n  function InvisibleEntity() {\n    _ref = InvisibleEntity.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  return InvisibleEntity;\n\n})(Entity);\n\n//@ sourceURL=models/InvisibleEntity.coffee"));
window.require.register("models/LivingEntity", Function('exports, require, module', "var LivingEntity, VisibleEntity, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  _this = this;\n\nVisibleEntity = require('models/VisibleEntity');\n\nmodule.exports = LivingEntity = (function(_super) {\n  __extends(LivingEntity, _super);\n\n  function LivingEntity() {\n    _ref = LivingEntity.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  return LivingEntity;\n\n})(VisibleEntity);\n\n({\n  defaults: {\n    level: 0,\n    hp: 0,\n    viewDirection: 0\n  },\n  die: function() {}\n});\n\n//@ sourceURL=models/LivingEntity.coffee"));
window.require.register("models/MapInitialEntitySpawnManager", Function('exports, require, module', "var MapInitialEntitySpawnManager, Model, mediator, _ref,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nModel = require('models/base/model');\n\nmediator = require(\"mediator\");\n\nmodule.exports = MapInitialEntitySpawnManager = (function(_super) {\n  __extends(MapInitialEntitySpawnManager, _super);\n\n  function MapInitialEntitySpawnManager() {\n    this.spawn = __bind(this.spawn, this);    _ref = MapInitialEntitySpawnManager.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  MapInitialEntitySpawnManager.prototype.initialize = function() {\n    this.set({\n      'mediator': require('mediator')\n    });\n    this.map = (this.get('mediator')).map;\n    return this.currMapData = this.map.get('currMapData');\n  };\n\n  MapInitialEntitySpawnManager.prototype.spawn = function() {\n    var layer, obj, object, _i, _len, _ref1, _results;\n\n    _ref1 = this.currMapData.layers;\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      layer = _ref1[_i];\n      if (layer.type === 'tilelayer') {\n        continue;\n      }\n      _results.push((function() {\n        var _j, _len1, _ref2, _results1;\n\n        _ref2 = layer.objects;\n        _results1 = [];\n        for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {\n          object = _ref2[_j];\n          obj = new mediator.factory[object.name];\n          obj.position.x = Math.floor(object.x / 32);\n          obj.position.y = Math.floor(object.y / 32);\n          obj.load();\n          _results1.push(mediator.entities.push(obj));\n        }\n        return _results1;\n      })());\n    }\n    return _results;\n  };\n\n  return MapInitialEntitySpawnManager;\n\n})(Model);\n\n//@ sourceURL=models/MapInitialEntitySpawnManager.coffee"));
window.require.register("models/Npc", Function('exports, require, module', "var Npc, Person, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nPerson = require('models/Person');\n\nmodule.exports = Npc = (function(_super) {\n  __extends(Npc, _super);\n\n  function Npc() {\n    _ref = Npc.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  mediator.factory['Npc'] = Npc;\n\n  return Npc;\n\n})(Person);\n\n//@ sourceURL=models/Npc.coffee"));
window.require.register("models/Person", Function('exports, require, module', "var LivingEntity, Person, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nLivingEntity = require('models/LivingEntity');\n\nmodule.exports = Person = (function(_super) {\n  __extends(Person, _super);\n\n  function Person() {\n    _ref = Person.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  Person.prototype.defaults = {\n    name: \"\"\n  };\n\n  return Person;\n\n})(LivingEntity);\n\n//@ sourceURL=models/Person.coffee"));
window.require.register("models/Player", Function('exports, require, module', "var Person, Player, mediator, _ref,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nPerson = require('models/Person');\n\nmediator = require('mediator');\n\n/*\nThe Player\n*/\n\n\nmodule.exports = Player = (function(_super) {\n  __extends(Player, _super);\n\n  function Player() {\n    this.render = __bind(this.render, this);    _ref = Player.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  mediator.factory['Player'] = Player;\n\n  Player.prototype.animationState = [0, 1, 2, 1];\n\n  Player.prototype.tileSet = {\n    name: \"Player\",\n    image: \"atlases/warrior_m.png\",\n    imageheight: 96,\n    imagewidth: 144,\n    tileheight: 32,\n    tilewidth: 32\n  };\n\n  Player.prototype.render = function(ctx, cx, cy) {\n    var animationState, dh, dw, dx, dy, img, pos, sh, sw, sx, sy, tileSet;\n\n    tileSet = this.tileSet;\n    animationState = this.animationState;\n    pos = this.position;\n    img = this.get('atlas');\n    sx = animationState[this.animationStep % animationState.length] * tileSet.tilewidth;\n    sy = this.viewDirection * tileSet.tileheight;\n    sw = tileSet.tilewidth;\n    sh = tileSet.tileheight;\n    dx = (pos.x * 32) - cx;\n    dy = (pos.y * 32) - cy;\n    dw = 32;\n    dh = 32;\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\n  };\n\n  return Player;\n\n})(Person);\n\n//@ sourceURL=models/Player.coffee"));
window.require.register("models/SoundManager", Function('exports, require, module', "var Model, SoundManager, mediator, _ref,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nModel = require('models/base/model');\n\nmediator = require('mediator');\n\nmodule.exports = SoundManager = (function(_super) {\n  __extends(SoundManager, _super);\n\n  function SoundManager() {\n    this.playSound = __bind(this.playSound, this);\n    this.initialize = __bind(this.initialize, this);    _ref = SoundManager.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  SoundManager.prototype.initialize = function() {\n    createjs.Sound.addEventListener(\"loadComplete\", createjs.proxy(this.playSound, this));\n    createjs.Sound.registerSound('sounds/dundundun.mp3', 'rainbow');\n    return mediator.subscribe('play', this.playSound);\n  };\n\n  SoundManager.prototype.playSound = function() {\n    var instance;\n\n    instance = createjs.Sound.play('rainbow');\n    return instance.setVolume(0.5);\n  };\n\n  return SoundManager;\n\n})(Model);\n\n//@ sourceURL=models/SoundManager.coffee"));
window.require.register("models/TILEDMap", Function('exports, require, module', "var Model, TILEDMap, mediator, _ref,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nModel = require('models/base/model');\n\nmediator = require('mediator');\n\n/*\nLoads and renders a level.\n@note emits `map:rendered` event when map ist fully rendered\n*/\n\n\nmodule.exports = TILEDMap = (function(_super) {\n  __extends(TILEDMap, _super);\n\n  function TILEDMap() {\n    this.render = __bind(this.render, this);\n    this.getTilePacket = __bind(this.getTilePacket, this);\n    this.createTileSet = __bind(this.createTileSet, this);\n    this.parseMapJSON = __bind(this.parseMapJSON, this);\n    this.load = __bind(this.load, this);    _ref = TILEDMap.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  TILEDMap.prototype.defaults = {\n    currMapData: null,\n    tileset: [],\n    numXTiles: 100,\n    numYTiles: 100,\n    tileSize: {\n      x: 64,\n      y: 64\n    },\n    pixelSize: {\n      x: 64,\n      y: 64\n    },\n    fullyLoaded: false,\n    canvas: null,\n    ctx: null\n  };\n\n  /*\n  @private\n  Initializes an instance.\n  */\n\n\n  TILEDMap.prototype.initialize = function() {\n    var canvas, ctx;\n\n    TILEDMap.__super__.initialize.apply(this, arguments);\n    this.imgLoadCount = 0;\n    canvas = document.createElement('canvas');\n    ctx = canvas.getContext('2d');\n    this.set({\n      'canvas': canvas\n    });\n    this.set({\n      'ctx': ctx\n    });\n    this.listenTo(this, 'change:fullyLoaded', this.render);\n    return mediator.map = this;\n  };\n\n  /*\n  Starts a XMLHttpRequest and calls the given callback when finished loading.\n  @param [String] reqUri URI to the file to be loaded\n  @param [Function] callback Callback function\n  @todo move to a library\n  */\n\n\n  TILEDMap.prototype.xhrGet = function(reqUri, callback) {\n    var xhr;\n\n    xhr = new XMLHttpRequest();\n    xhr.open('GET', reqUri, true);\n    xhr.onload = callback;\n    return xhr.send();\n  };\n\n  /*\n  Loads the map, parses it and renders it\n  @param [String] map URI that points to the json output of TILED map editor\n  */\n\n\n  TILEDMap.prototype.load = function(map) {\n    var _this = this;\n\n    return this.xhrGet(map, function(data) {\n      return _this.parseMapJSON(data.target.responseText);\n    });\n  };\n\n  /*\n  @private\n  Parses TILED map editor json data\n  @param [JSON] mapJSON the TILED map editor json data\n  */\n\n\n  TILEDMap.prototype.parseMapJSON = function(mapJSON) {\n    var currMapData, numXTiles, numYTiles, pixelSize, tileSize, tileset, tilesets;\n\n    currMapData = JSON.parse(mapJSON);\n    numXTiles = currMapData.width;\n    numYTiles = currMapData.height;\n    tileSize = {\n      x: currMapData.tileheight,\n      y: currMapData.tilewidth\n    };\n    pixelSize = {\n      x: numXTiles * tileSize.x,\n      y: numYTiles * tileSize.y\n    };\n    this.set({\n      'currMapData': currMapData\n    });\n    this.set({\n      'numXTiles': currMapData.width\n    });\n    this.set({\n      'numYTiles': currMapData.height\n    });\n    this.set({\n      'tileSize': tileSize\n    });\n    this.set({\n      'pixelSize': pixelSize\n    });\n    tilesets = (function() {\n      var _i, _len, _ref1, _results;\n\n      _ref1 = currMapData.tilesets;\n      _results = [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        tileset = _ref1[_i];\n        _results.push(this.createTileSet(tileset));\n      }\n      return _results;\n    }).call(this);\n    return this.set({\n      'tilesets': tilesets\n    });\n  };\n\n  /*\n  @private\n  Loads an atlas referenced from the map file and returns it\n  @param [Object] tileset a tileset from the map json\n  @return [Object] most important data from that tileset\n  @example The returned Object:\n    ts =\n      firstgid: …    # look at https://github.com/bjorn/tiled/wiki/TMX-Map-Format\n      image: …       # the loaded atlas image\n      imageheight: … # the atlas's height in pixels\n      imagewidth: …  # the atlas's width in pixels\n      name: …        # the atlas's name\n      numXTiles: …   # number of tiles in x direction\n      numYTiles: …   # number of tiles in y direction\n  */\n\n\n  TILEDMap.prototype.createTileSet = function(tileset) {\n    var currMapData, img, tileSize, ts,\n      _this = this;\n\n    currMapData = this.get('currMapData');\n    tileSize = this.get('tileSize');\n    img = new Image();\n    img.onload = function() {\n      _this.imgLoadCount++;\n      if (_this.imgLoadCount === currMapData.tilesets.length) {\n        return _this.set({\n          'fullyLoaded': true\n        });\n      }\n    };\n    img.src = 'atlases/' + tileset.image.replace(/^.*[\\\\\\/]/, '');\n    return ts = {\n      firstgid: tileset.firstgid,\n      image: img,\n      imageheight: tileset.imageheight,\n      imagewidth: tileset.imagewidth,\n      name: tileset.name,\n      numXTiles: Math.floor(tileset.imagewidth / tileSize.x),\n      numYTiles: Math.floor(tileset.imageheight / tileSize.y)\n    };\n  };\n\n  /*\n  @private\n  Takes a tile ID and returns the tile's atlas and position\n  @param [Integer] tileIndex a tile ID\n  @return [Object] the tile's atlas and position\n  @example the returned Object:\n    pkt =\n      img: … # the atlas where the tile is situated\n      px: …  # x value of the top left corner in pixels\n      py: …  # y value of the top left corner in pixels\n  */\n\n\n  TILEDMap.prototype.getTilePacket = function(tileIndex) {\n    var lTileX, lTileY, localIdx, pkt, tile, tileSize, tilesets, _i;\n\n    pkt = {\n      img: null,\n      px: 0,\n      py: 0\n    };\n    tile = null;\n    tilesets = this.get('tilesets');\n    tileSize = this.get('tileSize');\n    for (_i = tilesets.length - 1; _i >= 0; _i += -1) {\n      tile = tilesets[_i];\n      if (tile.firstgid <= tileIndex) {\n        break;\n      }\n    }\n    pkt.img = tile.image;\n    localIdx = tileIndex - tile.firstgid;\n    lTileX = Math.floor(localIdx % tile.numXTiles);\n    lTileY = Math.floor(localIdx / tile.numYTiles);\n    pkt.px = lTileX * tileSize.x;\n    pkt.py = lTileY * tileSize.y;\n    return pkt;\n  };\n\n  /*\n  Renders the map into it's own off screen canvas.\n  This means the whol background can be drawn with one single draw\n  call instead of hundreads.\n  */\n\n\n  TILEDMap.prototype.render = function() {\n    var canvas, coords, ctx, currMapData, layer, numXTiles, numYTiles, tID, tPKT, tileIDX, tileSize, _i, _j, _len, _len1, _ref1, _ref2;\n\n    currMapData = this.get('currMapData');\n    tileSize = this.get('tileSize');\n    numXTiles = this.get('numXTiles');\n    numYTiles = this.get('numYTiles');\n    canvas = this.get('canvas');\n    ctx = this.get('ctx');\n    canvas.width = numXTiles * tileSize.x;\n    canvas.height = numYTiles * tileSize.y;\n    _ref1 = currMapData.layers;\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      layer = _ref1[_i];\n      if (layer.type !== 'tilelayer') {\n        continue;\n      }\n      if (layer.name === 'sound') {\n        continue;\n      }\n      _ref2 = layer.data;\n      for (tileIDX = _j = 0, _len1 = _ref2.length; _j < _len1; tileIDX = ++_j) {\n        tID = _ref2[tileIDX];\n        if (tID === 0) {\n          continue;\n        }\n        tPKT = this.getTilePacket(tID);\n        coords = {\n          x: (tileIDX % numXTiles) * tileSize.x,\n          y: Math.floor(tileIDX / numYTiles) * tileSize.y\n        };\n        ctx.drawImage(tPKT.img, tPKT.px, tPKT.py, tileSize.x, tileSize.y, coords.x, coords.y, tileSize.x, tileSize.y);\n      }\n    }\n    return this.publishEvent('map:rendered');\n  };\n\n  return TILEDMap;\n\n})(Model);\n\n//@ sourceURL=models/TILEDMap.coffee"));
window.require.register("models/VisibleEntity", Function('exports, require, module', "var Entity, VisibleEntity, _ref,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nEntity = require('models/Entity');\n\nmodule.exports = VisibleEntity = (function(_super) {\n  __extends(VisibleEntity, _super);\n\n  function VisibleEntity() {\n    this.render = __bind(this.render, this);\n    this.load = __bind(this.load, this);\n    this.getSprite = __bind(this.getSprite, this);    _ref = VisibleEntity.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  VisibleEntity.prototype.tileSet = {\n    name: \"\",\n    image: \"\",\n    imageheight: 0,\n    imagewidth: 0,\n    tileheight: 0,\n    tilewidth: 0\n  };\n\n  VisibleEntity.prototype.animationState = 0;\n\n  VisibleEntity.prototype.getSprite = function() {};\n\n  VisibleEntity.prototype.load = function() {\n    var img, tileSet;\n\n    tileSet = this.tileSet;\n    img = new Image();\n    img.src = tileSet.image;\n    return this.set({\n      'atlas': img\n    });\n  };\n\n  VisibleEntity.prototype.render = function(ctx, cx, cy) {};\n\n  return VisibleEntity;\n\n})(Entity);\n\n//@ sourceURL=models/VisibleEntity.coffee"));
window.require.register("models/base/collection", Function('exports, require, module', "var Chaplin, Collection, Model, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nChaplin = require('chaplin');\n\nModel = require('models/base/model');\n\nmodule.exports = Collection = (function(_super) {\n  __extends(Collection, _super);\n\n  function Collection() {\n    _ref = Collection.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  Collection.prototype.model = Model;\n\n  return Collection;\n\n})(Chaplin.Collection);\n\n//@ sourceURL=models/base/collection.coffee"));
window.require.register("models/base/model", Function('exports, require, module', "var Chaplin, Model, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nChaplin = require('chaplin');\n\nmodule.exports = Model = (function(_super) {\n  __extends(Model, _super);\n\n  function Model() {\n    _ref = Model.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  return Model;\n\n})(Chaplin.Model);\n\n//@ sourceURL=models/base/model.coffee"));
window.require.register("models/home", Function('exports, require, module', "var Home, Model, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nModel = require('models/base/model');\n\nmodule.exports = Home = (function(_super) {\n  __extends(Home, _super);\n\n  function Home() {\n    _ref = Home.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  return Home;\n\n})(Model);\n\n//@ sourceURL=models/home.coffee"));
window.require.register("routes", Function('exports, require, module', "module.exports = function(match) {\n  match('', 'home#index');\n  match('u/6045251/shiny-wight/index.html', 'home#index');\n  return match('shiny-wight/index.html', 'home#index');\n};\n\n//@ sourceURL=routes.coffee"));
window.require.register("views/base/collection-view", Function('exports, require, module', "var Chaplin, CollectionView, View, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nChaplin = require('chaplin');\n\nView = require('views/base/view');\n\nmodule.exports = CollectionView = (function(_super) {\n  __extends(CollectionView, _super);\n\n  function CollectionView() {\n    _ref = CollectionView.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  CollectionView.prototype.getTemplateFunction = View.prototype.getTemplateFunction;\n\n  return CollectionView;\n\n})(Chaplin.CollectionView);\n\n//@ sourceURL=views/base/collection-view.coffee"));
window.require.register("views/base/view", Function('exports, require, module', "var Chaplin, View, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nChaplin = require('chaplin');\n\nrequire('lib/view-helper');\n\nmodule.exports = View = (function(_super) {\n  __extends(View, _super);\n\n  function View() {\n    _ref = View.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  View.prototype.getTemplateFunction = function() {\n    return this.template;\n  };\n\n  return View;\n\n})(Chaplin.View);\n\n//@ sourceURL=views/base/view.coffee"));
window.require.register("views/home-page-view", Function('exports, require, module', "var HomePageView, InputManager, MapInitialEntitySpawnManager, Player, SoundManager, TILEDMap, View, mediator, _ref,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nView = require('views/base/view');\n\nTILEDMap = require('models/TILEDMap');\n\nPlayer = require('models/Player');\n\nInputManager = require('models/InputManager');\n\nSoundManager = require('models/SoundManager');\n\nmediator = require('mediator');\n\nMapInitialEntitySpawnManager = require('models/MapInitialEntitySpawnManager');\n\nmodule.exports = HomePageView = (function(_super) {\n  __extends(HomePageView, _super);\n\n  function HomePageView() {\n    this.draw = __bind(this.draw, this);\n    this.handleInput = __bind(this.handleInput, this);\n    this.doTheWork = __bind(this.doTheWork, this);\n    this.render = __bind(this.render, this);\n    this.setup = __bind(this.setup, this);    _ref = HomePageView.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  HomePageView.prototype.autoRender = true;\n\n  HomePageView.prototype.className = 'home-page';\n\n  HomePageView.prototype.container = '#page-container';\n\n  HomePageView.prototype.initialize = function(options) {\n    var _this = this;\n\n    HomePageView.__super__.initialize.apply(this, arguments);\n    this.gMap = new TILEDMap();\n    this.skipFrame = true;\n    this.subscribeEvent('map:rendered', function() {\n      return _this.setup();\n    });\n    return this.gMap.load('map/level1.json');\n  };\n\n  HomePageView.prototype.setup = function() {\n    var entity, _i, _len, _ref1;\n\n    this.soundManager = new SoundManager();\n    this.inputManager = new InputManager();\n    this.MapInitialEntitySpawnManager = new MapInitialEntitySpawnManager();\n    this.MapInitialEntitySpawnManager.spawn();\n    _ref1 = mediator.entities;\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      entity = _ref1[_i];\n      if (entity.tileSet.name !== \"Player\") {\n        continue;\n      }\n      this.player = entity;\n      break;\n    }\n    return window.requestAnimationFrame(this.doTheWork);\n  };\n\n  HomePageView.prototype.render = function() {\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d');\n    return this.el.appendChild(this.canvas);\n  };\n\n  HomePageView.prototype.doTheWork = function() {\n    var _this = this;\n\n    return setTimeout(function() {\n      window.requestAnimationFrame(_this.doTheWork);\n      _this.handleInput();\n      return _this.draw();\n    }, 1000 / 25);\n  };\n\n  HomePageView.prototype.handleInput = function() {\n    var actions, placeholder;\n\n    actions = this.inputManager.get('actions');\n    if (actions['move-up']) {\n      this.player.moveUp();\n    }\n    if (actions['move-down']) {\n      this.player.moveDown();\n    }\n    if (actions['move-left']) {\n      this.player.moveLeft();\n    }\n    if (actions['move-right']) {\n      this.player.moveRight();\n    }\n    if (actions['interact']) {\n      placeholder = true;\n    }\n    if (actions['cancle']) {\n      return placeholder = true;\n    }\n  };\n\n  HomePageView.prototype.draw = function() {\n    var dh, dw, dx, dy, entity, numXTiles, numYTiles, pos, sh, sw, sx, sy, tileSize, _i, _len, _ref1, _results;\n\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n    tileSize = this.gMap.get('tileSize');\n    numXTiles = this.gMap.get('numXTiles');\n    numYTiles = this.gMap.get('numYTiles');\n    pos = this.player.position;\n    sx = (pos.x - 5) * tileSize.x;\n    sy = (pos.y - 5) * tileSize.y;\n    sw = dw = 11 * tileSize.x;\n    sh = dh = 11 * tileSize.y;\n    dx = 0;\n    dy = 0;\n    if (sx < 0) {\n      sx = 0;\n    }\n    if (sy < 0) {\n      sy = 0;\n    }\n    if (sx > numXTiles * tileSize.x) {\n      sx = numXTiles * tileSize.x;\n    }\n    if (sy > numYTiles * tileSize.y) {\n      sy = numYTiles * tileSize.y;\n    }\n    this.ctx.drawImage(this.gMap.get('canvas'), sx, sy, sw, sh, dx, dy, dw, dh);\n    _ref1 = mediator.entities;\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      entity = _ref1[_i];\n      _results.push(entity.render(this.ctx, sx, sy));\n    }\n    return _results;\n  };\n\n  return HomePageView;\n\n})(View);\n\n//@ sourceURL=views/home-page-view.coffee"));
window.require.register("views/layout", Function('exports, require, module', "var Chaplin, Layout, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nChaplin = require('chaplin');\n\nmodule.exports = Layout = (function(_super) {\n  __extends(Layout, _super);\n\n  function Layout() {\n    _ref = Layout.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  return Layout;\n\n})(Chaplin.Layout);\n\n//@ sourceURL=views/layout.coffee"));
