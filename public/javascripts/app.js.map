{"version":3,"file":"public/javascripts/app.js","sources":["app/application.coffee","app/components/Movable.coffee","app/components/Scriptable.coffee","app/components/Visual.coffee","app/controllers/base/controller.coffee","app/controllers/home-controller.coffee","app/core/AssetManager.coffee","app/core/Component.coffee","app/core/Core.coffee","app/core/DialogManager.coffee","app/core/Entity.coffee","app/core/InputManager.coffee","app/core/Level.coffee","app/core/Module.coffee","app/core/PhysicsManager.coffee","app/core/Result.coffee","app/core/SoundManager.coffee","app/core/SoundObj.coffee","app/core/TILEDMap.coffee","app/core/configurationManager.coffee","app/core/std.coffee","app/entities/Event.coffee","app/entities/Gumba.coffee","app/entities/Level1Event1.coffee","app/entities/Level1NickTalking.coffee","app/entities/Level1Prolog.coffee","app/entities/MapChanger.coffee","app/entities/Mario.coffee","app/entities/Player.coffee","app/entities/Yeti.coffee","app/entities/entities.coffee","app/entities/home.coffee","app/initialize.coffee","app/lib/support.coffee","app/lib/utils.coffee","app/lib/view-helper.coffee","app/models/base/model.coffee","app/routes.coffee","app/views/base/collection-view.coffee","app/views/base/view.coffee","app/views/home-page-view.coffee"],"names":[],"mappingshlzGA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA;;A,CCAA;;AACA;AADA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtjMA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvpWA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnxTA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjprBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzpCA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhFA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7EA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArxTA;;A","sourcesContent":["var Application, configurationManager, mapManager, mediator, routes, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmediator = Chaplin.mediator;\n\nmapManager = require('core/TILEDMap');\n\nconfigurationManager = require('core/configurationManager');\n\nroutes = require('routes');\n\nmodule.exports = Application = (function(_super) {\n  __extends(Application, _super);\n\n  function Application() {\n    _ref = Application.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  Application.prototype.title = 'shiny wight';\n\n  Application.prototype.initialize = function() {\n    this.initGameSpecificStuff();\n    return Application.__super__.initialize.apply(this, arguments);\n  };\n\n  Application.prototype.initMediator = function() {\n    var _this = this;\n    mediator.homepageview = null;\n    mediator.map = null;\n    mediator.soundManager = null;\n    mediator.dialogManager = null;\n    mediator.mapManager = mapManager;\n    mediator.configurationManager = configurationManager;\n    mediator.playWithSounds = true;\n    mediator.renderDebug = false;\n    mediator.disableDialogs = false;\n    mediator.factory = require('entities/entities');\n    mediator.levels = {};\n    mediator.activeLevel = '';\n    mediator.nextLevel = '';\n    mediator.std = null;\n    mediator.blockInput = false;\n    mediator.gui = null;\n    mediator.getActiveLevel = function() {\n      return mediator.levels[mediator.activeLevel];\n    };\n    return Application.__super__.initMediator.apply(this, arguments);\n  };\n\n  Application.prototype.initGameSpecificStuff = function() {\n    (function() {\n      var lastTime, vendors, x;\n      lastTime = 0;\n      vendors = [\"ms\", \"moz\", \"webkit\", \"o\"];\n      x = 0;\n      while (x < vendors.length && !window.requestAnimationFrame) {\n        window.requestAnimationFrame = window[vendors[x] + \"RequestAnimationFrame\"];\n        window.cancelAnimationFrame = window[vendors[x] + \"CancelAnimationFrame\"] || window[vendors[x] + \"CancelRequestAnimationFrame\"];\n        ++x;\n      }\n      if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = function(callback, element) {\n          var currTime, id, timeToCall;\n          currTime = new Date().getTime();\n          timeToCall = Math.max(0, 16 - (currTime - lastTime));\n          id = window.setTimeout(function() {\n            return callback(currTime + timeToCall);\n          }, timeToCall);\n          lastTime = currTime + timeToCall;\n          return id;\n        };\n      }\n      if (!window.cancelAnimationFrame) {\n        return window.cancelAnimationFrame = function(id) {\n          return clearTimeout(id);\n        };\n      }\n    })();\n    window.debug = document.location.hash.match(/debug/) && (typeof console !== \"undefined\" && console !== null);\n    window.Logger = window.console;\n    Object.getPrototypeOf(document.createElement('canvas').getContext('2d')).drawImageTiled = function(img, sx, sy, sw, sh, dx, dy, dw, dh, tileSizeX, tileSizeY) {\n      return this.drawImage(img, sx * tileSizeX, sy * tileSizeY, sw * tileSizeX, sh * tileSizeY, dx * tileSizeX, dy * tileSizeY, dw * tileSizeX, dh * tileSizeY);\n    };\n    console._debug = console.debug;\n    return console.debug = function() {\n      if (debug) {\n        return console._debug.apply(console, arguments);\n      }\n    };\n  };\n\n  return Application;\n\n})(Chaplin.Application);\n","var Component, Movable, Result,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nComponent = require('core/Component');\n\nResult = require('core/Result');\n\n/*\nDepends on Scriptable\n*/\n\n\nmodule.exports = Movable = (function(_super) {\n  __extends(Movable, _super);\n\n  function Movable(owner) {\n    this.moveToPosition = __bind(this.moveToPosition, this);\n    this.moveOnYAxis = __bind(this.moveOnYAxis, this);\n    this.moveOnXAxis = __bind(this.moveOnXAxis, this);\n    this.getActualMoveDistance = __bind(this.getActualMoveDistance, this);\n    this.stopMovement = __bind(this.stopMovement, this);\n    this._moveLeft = __bind(this._moveLeft, this);\n    this._moveRight = __bind(this._moveRight, this);\n    this._moveUp = __bind(this._moveUp, this);\n    this._moveDown = __bind(this._moveDown, this);\n    this.moveLeft = __bind(this.moveLeft, this);\n    this.moveRight = __bind(this.moveRight, this);\n    this.moveUp = __bind(this.moveUp, this);\n    this.moveDown = __bind(this.moveDown, this);\n    Movable.__super__.constructor.apply(this, arguments);\n    if (!this.owner.scriptable) {\n      console.error('Movable depends on the Scriptable component. %O does not have one', this.owner);\n    }\n    this.oldPosition = {\n      x: 0,\n      y: 0\n    };\n    this.moving = {\n      up: false,\n      down: false,\n      right: false,\n      left: false\n    };\n    this.maxDistance = 0;\n    this.positionToMoveTo = null;\n    this.onFollow = false;\n    this.counter = 0;\n    this.tryOtherDirection = false;\n    this.positionCheckTimer = Date.now();\n  }\n\n  Movable.prototype.moveDown = function(pixel) {\n    var deferred,\n      _this = this;\n    deferred = Q.defer();\n    console.assert(pixel > 0, 'argument must be a positive integer');\n    this.owner.scriptable.addTask(function() {\n      return _this._moveDown(pixel, deferred);\n    });\n    return deferred.promise;\n  };\n\n  Movable.prototype.moveUp = function(pixel) {\n    var deferred,\n      _this = this;\n    deferred = Q.defer();\n    console.assert(pixel > 0, 'argument must be a positive integer');\n    this.owner.scriptable.addTask(function() {\n      return _this._moveUp(pixel, deferred);\n    });\n    return deferred.promise;\n  };\n\n  Movable.prototype.moveRight = function(pixel) {\n    var deferred,\n      _this = this;\n    deferred = Q.defer();\n    console.assert(pixel > 0, 'argument must be a positive integer');\n    this.owner.scriptable.addTask(function() {\n      return _this._moveRight(pixel, deferred);\n    });\n    return deferred.promise;\n  };\n\n  Movable.prototype.moveLeft = function(pixel) {\n    var deferred,\n      _this = this;\n    deferred = Q.defer();\n    console.assert(pixel > 0, 'argument must be a positive integer');\n    this.owner.scriptable.addTask(function() {\n      return _this._moveLeft(pixel, deferred);\n    });\n    return deferred.promise;\n  };\n\n  Movable.prototype._moveDown = function(pixel, deferred) {\n    if (this.moving.down) {\n      if (this.owner.position.y > this.targetPos.y) {\n        this.stopMovement();\n        deferred.resolve(this);\n        return new Result(true);\n      } else if (this.checkPosition && this.owner.position.y === this.oldPosition.y) {\n        this.stopMovement();\n        this.tryOtherDirection = true;\n        deferred.resolve(this);\n        return new Result(true);\n      } else {\n        this.owner.physBody.SetLinearVelocity(new this.owner.level.physicsManager.Vec2(0, this.owner.velocity));\n        return new Result(false, this._moveDown, pixel, deferred);\n      }\n    } else {\n      console.debug('Move %O%i down.', this.owner, pixel);\n      this.targetPos = {\n        x: this.owner.position.x,\n        y: this.owner.position.y + pixel\n      };\n      this.moving.down = true;\n      this.owner.visual.spriteState.moving = true;\n      this.owner.visual.spriteState.viewDirection = 2;\n      return new Result(false, this._moveDown, pixel, deferred);\n    }\n  };\n\n  Movable.prototype._moveUp = function(pixel, deferred) {\n    if (this.moving.up) {\n      if (this.owner.position.y < this.targetPos.y) {\n        this.stopMovement();\n        deferred.resolve(this);\n        return new Result(true);\n      } else if (this.checkPosition && this.owner.position.y === this.oldPosition.y) {\n        this.stopMovement();\n        this.tryOtherDirection = true;\n        deferred.resolve(this);\n        return new Result(true);\n      } else {\n        this.owner.physBody.SetLinearVelocity(new this.owner.level.physicsManager.Vec2(0, -this.owner.velocity));\n        return new Result(false, this._moveUp, pixel, deferred);\n      }\n    } else {\n      console.debug('Move %O%i up.', this.owner, pixel);\n      this.targetPos = {\n        x: this.owner.position.x,\n        y: this.owner.position.y - pixel\n      };\n      this.moving.up = true;\n      this.owner.visual.spriteState.moving = true;\n      this.owner.visual.spriteState.viewDirection = 0;\n      return new Result(false, this._moveUp, pixel, deferred);\n    }\n  };\n\n  Movable.prototype._moveRight = function(pixel, deferred) {\n    if (this.moving.right) {\n      if (this.owner.position.x > this.targetPos.x) {\n        this.stopMovement();\n        deferred.resolve(this);\n        return new Result(true);\n      } else if (this.checkPosition && this.owner.position.x === this.oldPosition.x) {\n        this.stopMovement();\n        this.tryOtherDirection = true;\n        deferred.resolve(this);\n        return new Result(true);\n      } else {\n        this.owner.physBody.SetLinearVelocity(new this.owner.level.physicsManager.Vec2(this.owner.velocity, 0));\n        return new Result(false, this._moveRight, pixel, deferred);\n      }\n    } else {\n      console.debug('Move %O%i right.', this.owner, pixel);\n      this.targetPos = {\n        x: this.owner.position.x + pixel,\n        y: this.owner.position.y\n      };\n      this.moving.right = true;\n      this.owner.visual.spriteState.moving = true;\n      this.owner.visual.spriteState.viewDirection = 1;\n      return new Result(false, this._moveRight, pixel, deferred);\n    }\n  };\n\n  Movable.prototype._moveLeft = function(pixel, deferred) {\n    if (this.moving.left) {\n      if (this.owner.position.x < this.targetPos.x) {\n        this.stopMovement();\n        deferred.resolve(this);\n        return new Result(true);\n      } else if (this.checkPosition && this.owner.position.x === this.oldPosition.x) {\n        this.stopMovement();\n        this.tryOtherDirection = true;\n        deferred.resolve(this);\n        return new Result(true);\n      } else {\n        this.owner.physBody.SetLinearVelocity(new this.owner.level.physicsManager.Vec2(-this.owner.velocity, 0));\n        return new Result(false, this._moveLeft, pixel, deferred);\n      }\n    } else {\n      console.debug('Move %O%i left.', this.owner, pixel);\n      this.targetPos = {\n        x: this.owner.position.x - pixel,\n        y: this.owner.position.y\n      };\n      this.moving.left = true;\n      this.owner.visual.spriteState.moving = true;\n      this.owner.visual.spriteState.viewDirection = 3;\n      return new Result(false, this._moveLeft, pixel, deferred);\n    }\n  };\n\n  Movable.prototype.stopMovement = function() {\n    this.owner.physBody.SetLinearVelocity(new this.owner.level.physicsManager.Vec2(0, 0));\n    this.moving.down = false;\n    this.moving.up = false;\n    this.moving.left = false;\n    this.moving.right = false;\n    return this.owner.visual.spriteState.moving = false;\n  };\n\n  Movable.prototype.getActualMoveDistance = function(distance) {\n    if (distance > this.maxDistance) {\n      return this.maxDistance;\n    }\n    return distance;\n  };\n\n  Movable.prototype.moveOnXAxis = function(ax, dx) {\n    var distance;\n    distance = this.getActualMoveDistance(ax);\n    if (dx > 0) {\n      return this.moveRight(distance);\n    } else {\n      return this.moveLeft(distance);\n    }\n  };\n\n  Movable.prototype.moveOnYAxis = function(ay, dy) {\n    var distance;\n    distance = this.getActualMoveDistance(ay);\n    if (dy > 0) {\n      return this.moveDown(distance);\n    } else {\n      return this.moveUp(distance);\n    }\n  };\n\n  Movable.prototype.moveToPosition = function(positionToMoveTo, maxDistance) {\n    var _this = this;\n    this.positionToMoveTo = positionToMoveTo;\n    this.maxDistance = maxDistance;\n    return this.owner.scriptable.addTask(function() {\n      var ax, ay, dx, dy, threshold, _ref, _ref1;\n      if (!_this.onFollow) {\n        _this.onFollow = true;\n        _this.owner.scriptable.tasks.shift();\n        _this.savedTasks = _.clone(_this.owner.scriptable.tasks);\n        _this.owner.scriptable.tasks = [];\n      }\n      threshold = _this.owner.velocity / 50;\n      if (threshold < 3) {\n        threshold = 3;\n      }\n      dx = Math.floor(_this.positionToMoveTo.x - _this.owner.position.x);\n      dy = Math.floor(_this.positionToMoveTo.y - _this.owner.position.y);\n      ax = Math.abs(dx);\n      ay = Math.abs(dy);\n      if (((_this.positionToMoveTo.x - threshold < (_ref = _this.owner.position.x) && _ref < _this.positionToMoveTo.x + threshold)) && ((_this.positionToMoveTo.y - threshold < (_ref1 = _this.owner.position.y) && _ref1 < _this.positionToMoveTo.y + threshold))) {\n        _this.owner.position.x = _this.positionToMoveTo.x;\n        _this.owner.position.y = _this.positionToMoveTo.y;\n        _this.positionToMoveTo = null;\n        _this.onFollow = false;\n        _this.owner.scriptable.tasks = _this.savedTasks;\n        return;\n      }\n      if (ax >= ay && !_this.tryOtherDirection) {\n        return _this.moveOnXAxis(ax, dx);\n      } else if (ax >= ay && _this.tryOtherDirection) {\n        _this.tryOtherDirection = false;\n        return _this.moveOnYAxis(ay, dy);\n      } else if (ax <= ay && !_this.tryOtherDirection) {\n        return _this.moveOnYAxis(ay, dy);\n      } else if (ax <= ay && _this.tryOtherDirection) {\n        _this.tryOtherDirection = false;\n        return _this.moveOnXAxis(ax, dx);\n      }\n    });\n  };\n\n  return Movable;\n\n})(Component);\n","var Component, Result, Scriptable,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nComponent = require('core/Component');\n\nResult = require('core/Result');\n\n/*\n*/\n\n\nmodule.exports = Scriptable = (function(_super) {\n  __extends(Scriptable, _super);\n\n  function Scriptable(owner) {\n    this.addTask = __bind(this.addTask, this);\n    this._executeScripts = __bind(this._executeScripts, this);\n    this.addScripts = __bind(this.addScripts, this);\n    this._scriptable_update = __bind(this._scriptable_update, this);\n    Scriptable.__super__.constructor.apply(this, arguments);\n    this._tasks = [];\n    this.owner.addListener('update', this._scriptable_update);\n  }\n\n  Scriptable.prototype._scriptable_update = function() {\n    var result, task;\n    task = this._tasks[0];\n    if (task) {\n      result = task();\n      console.assert(result instanceof Result, 'Task did not return Result object');\n      if (result.done != null) {\n        this._tasks.shift();\n        if (result.next != null) {\n          return this._tasks.unshift(function() {\n            return result.next.apply(null, result[\"arguments\"]);\n          });\n        }\n      }\n    }\n  };\n\n  Scriptable.prototype.addScripts = function(scripts) {\n    var deferred;\n    deferred = Q.defer();\n    this._executeScripts(scripts, deferred);\n    return deferred.promise;\n  };\n\n  Scriptable.prototype._executeScripts = function(scripts, deferred) {\n    var args, promise, promises, s, script,\n      _this = this;\n    if (scripts.length === 0) {\n      return deferred.resolve();\n    } else {\n      script = scripts.shift();\n      if (script instanceof Array) {\n        if (script[0] instanceof Array) {\n          debugger;\n          promises = (function() {\n            var _i, _len, _results;\n            _results = [];\n            for (_i = 0, _len = script.length; _i < _len; _i++) {\n              s = script[_i];\n              _results.push(this.addScripts(s));\n            }\n            return _results;\n          }).call(this);\n          promise = Q.all(promises);\n          return promise.then(function() {\n            debugger;\n            console.debug(arguments);\n            return _this._executeScripts(scripts, deferred);\n          });\n        } else if (script[0] instanceof Function) {\n          args = script.slice(1);\n          promise = script[0].apply(null, args);\n          return promise.then(function() {\n            console.debug(arguments);\n            return _this._executeScripts(scripts, deferred);\n          });\n        }\n      } else if (script instanceof Function) {\n        promise = script.apply();\n        return promise.then(function() {\n          console.debug(arguments);\n          return _this._executeScripts(scripts, deferred);\n        });\n      }\n    }\n  };\n\n  /*\n  @param [function] task Must return a {Result}\n  */\n\n\n  Scriptable.prototype.addTask = function(task) {\n    return this._tasks.push(task);\n  };\n\n  return Scriptable;\n\n})(Component);\n","var Component, Visual,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nComponent = require('core/Component');\n\n/*\n*/\n\n\nmodule.exports = Visual = (function(_super) {\n  __extends(Visual, _super);\n\n  function Visual(owner) {\n    this.render = __bind(this.render, this);\n    this.getSpritePacket = __bind(this.getSpritePacket, this);\n    Visual.__super__.constructor.apply(this, arguments);\n    this.spriteState = {\n      moving: false,\n      viewDirection: 0,\n      animationRate: 100,\n      normal: 1\n    };\n    this.atlas = new Image();\n    this.tileSet = {\n      tilesX: 0,\n      tilesY: 0,\n      tileheight: 0,\n      tilewidth: 0,\n      offset: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n\n  Visual.prototype.getSpritePacket = function() {\n    var pkt, x, y;\n    x = Math.floor((Date.now() - this.owner.creationTime) / this.spriteState.animationRate) % this.tileSet.tilesX;\n    y = this.spriteState.viewDirection;\n    if (!this.spriteState.moving) {\n      x = this.spriteState.normal;\n    }\n    return pkt = {\n      x: x * this.tileSet.tilewidth,\n      y: y * this.tileSet.tileheight\n    };\n  };\n\n  Visual.prototype.render = function(ctx, cx, cy) {\n    var dh, dw, dx, dy, sh, spritePkt, sw, sx, sy;\n    spritePkt = this.getSpritePacket();\n    sx = spritePkt.x;\n    sy = spritePkt.y;\n    sw = this.tileSet.tilewidth;\n    sh = this.tileSet.tileheight;\n    dx = this.owner.position.x - cx;\n    dy = this.owner.position.y - cy;\n    dw = this.owner.size.x;\n    dh = this.owner.size.y;\n    dx = dx - this.tileSet.offset.x;\n    dy = dy - this.tileSet.offset.y;\n    return ctx.drawImage(this.atlas, sx, sy, sw, sh, dx, dy, dw, dh);\n  };\n\n  return Visual;\n\n})(Component);\n","var Controller, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = Controller = (function(_super) {\n  __extends(Controller, _super);\n\n  function Controller() {\n    _ref = Controller.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  return Controller;\n\n})(Chaplin.Controller);\n","var Controller, HomeController, HomePageView, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nController = require('controllers/base/controller');\n\nHomePageView = require('views/home-page-view');\n\nmodule.exports = HomeController = (function(_super) {\n  __extends(HomeController, _super);\n\n  function HomeController() {\n    _ref = HomeController.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  HomeController.prototype.index = function() {\n    return this.view = new HomePageView({\n      gMap: this.gMap\n    });\n  };\n\n  return HomeController;\n\n})(Controller);\n","var AssetManager,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\nmodule.exports = AssetManager = (function() {\n  var assets, preload;\n\n  function AssetManager() {\n    this.get = __bind(this.get, this);\n  }\n\n  preload = new createjs.LoadQueue();\n\n  assets = [];\n\n  AssetManager.prototype.get = function(asset) {};\n\n  return AssetManager;\n\n})();\n","/*\nA Result represents the...well...result of a Task.\n\nAny function given to {Scriptable#addTask} is expected to return a {Result}.\n*/\n\nvar Component,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\nmodule.exports = Component = (function() {\n  function Component(owner) {\n    this.owner = owner;\n    this.mount = __bind(this.mount, this);\n  }\n\n  /*\n  Copys all functions from the component to {#owner}.\n  Ignores functions starting with an underscore and refuses to\n  overwrite functions.\n  */\n\n\n  Component.prototype.mount = function() {\n    var method, _results,\n      _this = this;\n    _results = [];\n    for (method in this) {\n      if (method[0] === '_' || method === 'owner' || method === 'constructor' || method === 'mount') {\n        continue;\n      }\n      if (this.owner[method] != null) {\n        console.debug('Method %s exists already and will not be mounted on %O', method, this.owner);\n        continue;\n      }\n      _results.push(this.owner[method] = (function(method) {\n        return function() {\n          return _this[method].apply(_this, arguments);\n        };\n      })(method));\n    }\n    return _results;\n  };\n\n  return Component;\n\n})();\n","\n","var DialogManager, mediator,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\nmediator = Chaplin.mediator;\n\n/*\n@TODO: needs rewrite\n*/\n\n\nmodule.exports = DialogManager = (function() {\n  function DialogManager() {\n    this.unblockInput = __bind(this.unblockInput, this);\n    this.blockInput = __bind(this.blockInput, this);\n    this.hideDialog = __bind(this.hideDialog, this);\n    this.showDialog = __bind(this.showDialog, this);\n    this.isDialog = __bind(this.isDialog, this);\n    this._chooseCurrentSelection = __bind(this._chooseCurrentSelection, this);\n    this._selectOption = __bind(this._selectOption, this);\n    this.moveSelectionUp = __bind(this.moveSelectionUp, this);\n    this.moveSelectionDown = __bind(this.moveSelectionDown, this);\n    this.source = document.getElementById('dialog-template');\n    this.template = Handlebars.compile(this.source.innerText);\n    this.canvas = document.getElementById('game-canvas');\n    this.$dialog = $('#dialog');\n    this.currentSelection = 1;\n    mediator.dialogManager = this;\n    this.didIBlock = false;\n    this.selectOption = _.debounce(this._selectOption, 50, true);\n    this.chooseCurrentSelection = _.debounce(this._chooseCurrentSelection, 50, true);\n  }\n\n  DialogManager.prototype.moveSelectionDown = function() {\n    return this.selectOption(this.currentSelection + 1);\n  };\n\n  DialogManager.prototype.moveSelectionUp = function() {\n    return this.selectOption(this.currentSelection - 1);\n  };\n\n  DialogManager.prototype._selectOption = function(optNum) {\n    var options;\n    options = this.$dialog.children().children();\n    if (optNum < 1) {\n      optNum = options.length - 1;\n    }\n    optNum = ((optNum - 1) % (options.length - 1)) + 1;\n    options.removeClass('dialog-option-hovered');\n    options.eq(optNum).addClass('dialog-option-hovered');\n    return this.currentSelection = optNum;\n  };\n\n  DialogManager.prototype._chooseCurrentSelection = function() {\n    return this.$dialog.children().children().eq(this.currentSelection).click();\n  };\n\n  DialogManager.prototype.isDialog = function() {\n    return this.$dialog.children().length !== 0;\n  };\n\n  DialogManager.prototype.showDialog = function(data) {\n    var deferred, result,\n      _this = this;\n    deferred = Q.defer();\n    if (mediator.disableDialogs) {\n      deferred.resolve();\n      return;\n    }\n    if (this.isDialog()) {\n      console.error(\"I'm already showing a dialog, so you must be doing something wrong!\");\n      deferred.reject();\n      return;\n    }\n    this.blockInput();\n    result = $(this.template(data));\n    console.debug('Show dialog: %O', data);\n    result.children('.dialog-option').click(function(event) {\n      var id;\n      id = parseInt($(_this).prop('id')) + 1;\n      if (isNaN(id)) {\n        id = -1;\n      }\n      _this.hideDialog();\n      return deferred.resolve(id);\n    });\n    $('#dialog').append(result).css('left', 0).css('top', this.canvas.height + 2).css('width', this.canvas.width).fadeIn();\n    this.selectOption(1);\n    return deferred.promise;\n  };\n\n  DialogManager.prototype.hideDialog = function() {\n    var deferred;\n    deferred = Q.defer();\n    $('#dialog').empty();\n    this.unblockInput();\n    deferred.resolve();\n    return deferred.promise;\n  };\n\n  DialogManager.prototype.blockInput = function() {\n    if (mediator.blockInput) {\n      this.didIBlock = false;\n    } else {\n      this.didIBlock = true;\n    }\n    return mediator.blockInput = true;\n  };\n\n  DialogManager.prototype.unblockInput = function() {\n    if (this.didIBlock) {\n      mediator.blockInput = false;\n      return this.didIBlock = false;\n    }\n  };\n\n  return DialogManager;\n\n})();\n","var Entity, Module, Result, mediator,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nModule = require('core/Module');\n\nmediator = Chaplin.mediator;\n\nResult = require('core/Result');\n\n/*\nBase class for all entities\n\n@example How to subclass Entity\n  module.exports = class VisibleEntity extends Entity\n    onAction: (object): ->\n      # do something\n*/\n\n\nmodule.exports = Entity = (function(_super) {\n  __extends(Entity, _super);\n\n  function Entity(owningLevel, object) {\n    this.unblockInput = __bind(this.unblockInput, this);\n    this.blockInput = __bind(this.blockInput, this);\n    this.update = __bind(this.update, this);\n    this.makeMeDynamic = __bind(this.makeMeDynamic, this);\n    this.makeMeStatic = __bind(this.makeMeStatic, this);\n    this.onPositionChange = __bind(this.onPositionChange, this);\n    this.kill = __bind(this.kill, this);\n    this.load = __bind(this.load, this);\n    this.onAction = __bind(this.onAction, this);\n    this.removeListener = __bind(this.removeListener, this);\n    this.fire = __bind(this.fire, this);\n    this.addOneTimeListener = __bind(this.addOneTimeListener, this);\n    this.addListener = __bind(this.addListener, this);\n    var content, prop, _ref, _ref1, _ref2, _ref3;\n    Entity.__super__.constructor.apply(this, arguments);\n    this._listeners = [];\n    _ref = object.properties;\n    for (prop in _ref) {\n      content = _ref[prop];\n      this[prop] = content;\n    }\n    this.level = owningLevel;\n    this.creationTime = Date.now();\n    this.name = object.name;\n    /*\n    @property [Integer]\n    Entity' velocity\n    Standard velocity = 10\n    */\n\n    this.velocity = 400;\n    /*\n    @property [Object] The entity's position in pixels\n    @option position [Integer] x y coordinate\n    */\n\n    this.position = {\n      x: Math.floor(object.x),\n      y: Math.floor(object.y)\n    };\n    /*\n    @property [Object] The entity's size\n    */\n\n    this.size = {\n      x: Math.floor(object.width),\n      y: Math.floor(object.height)\n    };\n    this.entityDef = {\n      type: 'dynamic',\n      x: this.position.x,\n      y: this.position.y,\n      width: this.size.x,\n      height: this.size.y,\n      ellipse: false,\n      isSensor: false,\n      userData: {\n        ent: this\n      }\n    };\n    this.entityDef.ellipse = (_ref1 = object.ellipse) != null ? _ref1 : false;\n    this.entityDef.isSensor = (_ref2 = object.properties.isSensor) != null ? _ref2 : false;\n    this.entityDef.type = (_ref3 = object.properties.physicsType) != null ? _ref3 : 'dynamic';\n    this.physBody = this.level.physicsManager.addBody(this.entityDef, this.level.b2World);\n    this.physBody.SetLinearVelocity(new this.level.physicsManager.Vec2(0, 0));\n  }\n\n  /*\n  Adds an event listener.\n  @param [string] type The event type to listen to.\n  @param [function] listener The Callback to be invoked.\n  */\n\n\n  Entity.prototype.addListener = function(type, listener) {\n    if (this._listeners[type] == null) {\n      this._listeners[type] = [];\n    }\n    return this._listeners[type].push(listener);\n  };\n\n  /*\n  Adds an event listener that will only be invoked once\n  @see Entity#addListener\n  */\n\n\n  Entity.prototype.addOneTimeListener = function(type, listener) {\n    var _this = this;\n    return this.addListener(type, function(event) {\n      _this.removeListener(event.type, event.listener);\n      return listener.call(_this, event);\n    });\n  };\n\n  /*\n  Fires an event, invoking all it's listeners.\n  @param [string] event The event type.\n  */\n\n\n  Entity.prototype.fire = function(event) {\n    var callback, callbacks, listener, listeners, _i, _j, _len, _len1, _results;\n    if (typeof event === \"string\") {\n      event = {\n        type: event\n      };\n    }\n    if (event.target == null) {\n      event.target = this;\n    }\n    if (!event.type) {\n      throw new Error(\"Event object missing 'type' property.\");\n    }\n    if (this._listeners[event.type] instanceof Array) {\n      listeners = this._listeners[event.type];\n      callbacks = [];\n      for (_i = 0, _len = listeners.length; _i < _len; _i++) {\n        listener = listeners[_i];\n        callbacks.push(listener);\n      }\n      _results = [];\n      for (_j = 0, _len1 = callbacks.length; _j < _len1; _j++) {\n        callback = callbacks[_j];\n        event.listener = callback;\n        callback.call(this, event);\n        _results.push(delete event.callback);\n      }\n      return _results;\n    }\n  };\n\n  /*\n  Removes an event listener.\n  @param [string] type The event type.\n  @param [function] listner The Callback to be removed.\n  */\n\n\n  Entity.prototype.removeListener = function(type, listener) {\n    var i, l, listeners, _i, _len, _results;\n    if (this._listeners[type] instanceof Array) {\n      listeners = this._listeners[type];\n      _results = [];\n      for (i = _i = 0, _len = listeners.length; _i < _len; i = ++_i) {\n        l = listeners[i];\n        if (l === listener) {\n          listeners.splice(i, 1);\n          break;\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    }\n  };\n\n  /*\n  Is called if the Player stands in front of this Entity and want's to interact with it.\n  @param [Object] player\n    The Player.\n  */\n\n\n  Entity.prototype.onAction = function(player) {};\n\n  Entity.prototype.load = function() {\n    return this.fire('load');\n  };\n\n  Entity.prototype.kill = function() {\n    var deferred;\n    deferred = Q.defer();\n    this.fire('kill');\n    this.level.physicsManager.world.DestroyBody(this.physBody);\n    this.level.removeEntity(this);\n    deferred.resolve();\n    console.debug('Killed %O', this);\n    return deferred.promise;\n  };\n\n  /*\n  Is called when the Entity moved\n  @note removed publish event 'anyEntityhere:moved' for much(!) better performance\n  */\n\n\n  Entity.prototype.onPositionChange = function() {};\n\n  Entity.prototype.makeMeStatic = function() {\n    this.oldVelocity = _.clone(this.physBody.GetLinearVelocity());\n    return this.physBody.SetType(Box2D.Dynamics.b2Body.b2_staticBody);\n  };\n\n  Entity.prototype.makeMeDynamic = function() {\n    this.physBody.SetType(Box2D.Dynamics.b2Body.b2_dynamicBody);\n    this.physBody.SetAwake(true);\n    return this.physBody.SetLinearVelocity(this.oldVelocity);\n  };\n\n  /*\n  Is called each tick/frame.\n  */\n\n\n  Entity.prototype.update = function() {\n    if (this.physBody.GetPosition().x != null) {\n      this.position.x = this.physBody.GetPosition().x;\n    }\n    if (this.physBody.GetPosition().y != null) {\n      this.position.y = this.physBody.GetPosition().y;\n    }\n    return this.fire('update');\n  };\n\n  Entity.prototype.blockInput = function() {\n    var deferred;\n    deferred = Q.defer();\n    this.scriptable.addTask((function(deferred) {\n      return function() {\n        mediator.blockInput = true;\n        deferred.resolve();\n        return new Result(true);\n      };\n    })(deferred));\n    return deferred.promise;\n  };\n\n  Entity.prototype.unblockInput = function() {\n    var deferred;\n    deferred = Q.defer();\n    this.scriptable.addTask((function(deferred) {\n      return function() {\n        mediator.blockInput = false;\n        deferred.resolve();\n        return new Result(true);\n      };\n    })(deferred));\n    return deferred.promise;\n  };\n\n  return Entity;\n\n})(Module);\n","var InputManager, Model, _ref,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nModel = require('models/base/model');\n\nmodule.exports = InputManager = (function(_super) {\n  __extends(InputManager, _super);\n\n  function InputManager() {\n    this.bind = __bind(this.bind, this);\n    this.onKeyUpEvent = __bind(this.onKeyUpEvent, this);\n    this.onKeyDownEvent = __bind(this.onKeyDownEvent, this);\n    this.initialize = __bind(this.initialize, this);\n    _ref = InputManager.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  InputManager.prototype.defaults = {\n    bindings: {},\n    actions: {},\n    presses: {},\n    locks: {},\n    delayedKeyup: [],\n    keyCodes: {\n      'a': 65,\n      'w': 87,\n      'd': 68,\n      's': 83,\n      'arrowLeft': 37,\n      'arrowUp': 38,\n      'arrowRight': 39,\n      'arrowDown': 40,\n      'enter': 13,\n      'escape': 27,\n      'space': 32\n    }\n  };\n\n  InputManager.prototype.initialize = function() {\n    var keyCodes;\n    keyCodes = this.get('keyCodes');\n    this.bind(keyCodes['w'], 'move-up');\n    this.bind(keyCodes['a'], 'move-left');\n    this.bind(keyCodes['s'], 'move-down');\n    this.bind(keyCodes['d'], 'move-right');\n    this.bind(keyCodes['arrowUp'], 'move-up');\n    this.bind(keyCodes['arrowLeft'], 'move-left');\n    this.bind(keyCodes['arrowDown'], 'move-down');\n    this.bind(keyCodes['arrowRight'], 'move-right');\n    this.bind(keyCodes['enter'], 'interact');\n    this.bind(keyCodes['space'], 'interact');\n    this.bind(keyCodes['escape'], 'cancel');\n    window.addEventListener('keydown', this.onKeyDownEvent);\n    window.addEventListener('keyup', this.onKeyUpEvent);\n    return this.otherKeyPressed = false;\n  };\n\n  /*\n  Set the corresponding action in the actions array to true\n  \n      Pressing `w` will set `move-up` to true on an qwerty keyboard\n  @params [Event] event Event Object\n  */\n\n\n  InputManager.prototype.onKeyDownEvent = function(event) {\n    var action, actions, bindings, code;\n    code = event['keyCode'];\n    if (this.otherKeyPressed) {\n      this.onKeyUpEvent(this.otherKeyPressed);\n    }\n    bindings = this.get('bindings');\n    actions = this.get('actions');\n    action = bindings[code];\n    if (action) {\n      actions[action] = true;\n    }\n    this.set({\n      'actions': actions\n    });\n    return this.otherKeyPressed = event;\n  };\n\n  /*\n  Set the corresponding action in the actions array to false\n  \n      Releasing `w` will set `move-up` to false on an qwerty keyboard\n  @params [Event] event Event Object\n  */\n\n\n  InputManager.prototype.onKeyUpEvent = function(event) {\n    var action, actions, bindings, code;\n    bindings = this.get('bindings');\n    actions = this.get('actions');\n    code = event['keyCode'];\n    action = bindings[code];\n    if (action) {\n      actions[action] = false;\n    }\n    return this.set({\n      'actions': actions\n    });\n  };\n\n  /*\n  Bind a key code to an action.\n  @example How to bind `w` to the `move-up` action\n    @bind 87, 'move-up'\n  */\n\n\n  InputManager.prototype.bind = function(key, action) {\n    var bindings;\n    bindings = this.get('bindings');\n    return bindings[key] = action;\n  };\n\n  return InputManager;\n\n})(Model);\n","var Level, Model, PhysicsManager, mediator,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nModel = require('models/base/model');\n\nPhysicsManager = require('core/PhysicsManager');\n\nmediator = Chaplin.mediator;\n\nmodule.exports = Level = (function(_super) {\n  __extends(Level, _super);\n\n  function Level(manifestId, _callback) {\n    var _this = this;\n    this._callback = _callback;\n    this.addTask = __bind(this.addTask, this);\n    this.updatePhysics = __bind(this.updatePhysics, this);\n    this.update = __bind(this.update, this);\n    this.createEntity = __bind(this.createEntity, this);\n    this.removeEntity = __bind(this.removeEntity, this);\n    this.addEntity = __bind(this.addEntity, this);\n    this.initialSpawn = __bind(this.initialSpawn, this);\n    this.checkIfDone = __bind(this.checkIfDone, this);\n    this.setup = __bind(this.setup, this);\n    this.manifest = null;\n    this._tasks = [];\n    this.mapSoundList = {};\n    this.backgroundSoundList = {};\n    this.soundTheme = null;\n    this.soundCount = 0;\n    this.physicsManager;\n    this.entities = {};\n    this.entityObjects = [];\n    this.player = null;\n    this.bodyCount = 0;\n    this.mapCanvas = null;\n    this.mapTiledObject = null;\n    this.tileSets = null;\n    this.bodiesLoaded = false;\n    this.mapLoaded = false;\n    this.loadCompleted = false;\n    this.setupped = false;\n    this.soundsLoaded = false;\n    this.manifest = mediator.configurationManager.configure({}, manifestId);\n    mediator.std.xhrGet(this.manifest.map.prefix + '/' + this.manifest.map.file, function(data) {\n      _this.mapTiledObject = JSON.parse(data.target.responseText);\n      mediator.mapManager.parse(_this.mapTiledObject, function(map, tileSets) {\n        _this.mapCanvas = map;\n        _this.tileSets = tileSets;\n        _this.mapTiledObject.processedTileSets = _this.tileSets;\n        _this.mapLoaded = true;\n        _this.physicsManager = new PhysicsManager(_this.mapTiledObject);\n        return _this.checkIfDone();\n      });\n      if (mediator.playWithSounds) {\n        _this.soundMap = mediator.soundManager.getSoundMap(_this.mapTiledObject);\n        _this.mapSoundList = _this.manifest.sounds.sounds;\n        _this.backgroundSoundList = _this.manifest.sounds.backgroundSounds;\n        _this.themeSound = _this.manifest.sounds.theme;\n        if (_this.manifest.sounds.themeIntensity != null) {\n          _this.themeIntensity = _this.manifest.sounds.themeIntensity;\n        } else {\n          _this.themeIntensity = 1;\n        }\n        _this.soundCount = _this.mapSoundList.length + _this.backgroundSoundList.length + 1;\n        return mediator.soundManager.loadSounds(_this.manifest.sounds, function() {\n          _this.soundCount--;\n          if (_this.soundCount <= 0) {\n            _this.soundsLoaded = true;\n            return _this.checkIfDone();\n          }\n        });\n      }\n    });\n  }\n\n  Level.prototype.setup = function() {\n    if (this.loadCompleted) {\n      if (!this.setupped) {\n        this.setupped = true;\n        return this.initialSpawn();\n      } else {\n        return console.error('Level already set up!');\n      }\n    } else {\n      return console.error(\"Don't call Level.setup() unless the manifest finished loading!\");\n    }\n  };\n\n  Level.prototype.checkIfDone = function() {\n    if (this.mapLoaded && (this.soundsLoaded || !mediator.playWithSounds)) {\n      console.debug('Finished loading Map: %O', this.manifest.map);\n      this.loadCompleted = true;\n      if (this._callback) {\n        return this._callback();\n      }\n    }\n  };\n\n  Level.prototype.initialSpawn = function() {\n    var layer, obj, object, _i, _len, _ref, _results;\n    _ref = this.mapTiledObject.layers;\n    _results = [];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      layer = _ref[_i];\n      if (layer.type === 'tilelayer') {\n        continue;\n      }\n      if (layer.name !== 'spawnpoints') {\n        continue;\n      }\n      _results.push((function() {\n        var _j, _len1, _ref1, _results1;\n        _ref1 = layer.objects;\n        _results1 = [];\n        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n          object = _ref1[_j];\n          if (object.type === '') {\n            continue;\n          }\n          obj = this.addEntity(object);\n          if (object.type === \"Player\") {\n            _results1.push(this.player = obj);\n          } else {\n            _results1.push(void 0);\n          }\n        }\n        return _results1;\n      }).call(this));\n    }\n    return _results;\n  };\n\n  Level.prototype.addEntity = function(object) {\n    var obj;\n    obj = this.createEntity(object);\n    this.entityObjects.push(obj);\n    return obj;\n  };\n\n  Level.prototype.removeEntity = function(entity) {\n    return this._tasks.push(function() {\n      var index;\n      index = this.entityObjects.indexOf(entity);\n      return this.entityObjects.splice(index, 1);\n    });\n  };\n\n  Level.prototype.createEntity = function(object) {\n    var Ent, configurator, obj;\n    Ent = mediator.factory[object.type];\n    configurator = mediator.configurationManager[object.name];\n    if (configurator == null) {\n      console.warn('No configurations found for %s:%O', object.name, object);\n    }\n    obj = new Ent(this, _.clone(object));\n    if (configurator) {\n      configurator.apply(obj);\n    }\n    obj.load();\n    return obj;\n  };\n\n  Level.prototype.update = function() {\n    var ent, index, task, _i, _j, _len, _len1, _ref, _ref1;\n    _ref = this.entityObjects;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      ent = _ref[_i];\n      ent.update();\n    }\n    _ref1 = this._tasks;\n    for (index = _j = 0, _len1 = _ref1.length; _j < _len1; index = ++_j) {\n      task = _ref1[index];\n      task.apply(this);\n    }\n    return this._tasks = [];\n  };\n\n  Level.prototype.updatePhysics = function() {\n    return this.physicsManager.update();\n  };\n\n  Level.prototype.addTask = function(task) {\n    return this._tasks.push(function() {\n      return task.apply(this);\n    });\n  };\n\n  return Level;\n\n})(Model);\n","var Module, moduleKeywords,\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nmoduleKeywords = ['extended', 'included'];\n\nmodule.exports = Module = (function() {\n  function Module() {}\n\n  Module.extend = function(obj) {\n    var key, value, _ref;\n    for (key in obj) {\n      value = obj[key];\n      if (__indexOf.call(moduleKeywords, key) < 0) {\n        this[key] = value;\n      }\n    }\n    if ((_ref = obj.extended) != null) {\n      _ref.apply(this);\n    }\n    return this;\n  };\n\n  Module.include = function(obj) {\n    var key, value, _ref;\n    for (key in obj) {\n      value = obj[key];\n      if (__indexOf.call(moduleKeywords, key) < 0) {\n        this.prototype[key] = value;\n      }\n    }\n    if ((_ref = obj.included) != null) {\n      _ref.apply(this);\n    }\n    return this;\n  };\n\n  return Module;\n\n})();\n","var Body, BodyDef, CircleShape, DebugDraw, Fixture, FixtureDef, MassData, Model, PHYSICS_LOOP, PhysicsManager, PolygonShape, RevoluteJointDef, Vec2, World, mediator,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\nModel = require('models/base/model');\n\nmediator = Chaplin.mediator;\n\nVec2 = Box2D.Common.Math.b2Vec2;\n\nBodyDef = Box2D.Dynamics.b2BodyDef;\n\nBody = Box2D.Dynamics.b2Body;\n\nFixtureDef = Box2D.Dynamics.b2FixtureDef;\n\nFixture = Box2D.Dynamics.b2Fixture;\n\nWorld = Box2D.Dynamics.b2World;\n\nMassData = Box2D.Collision.Shapes.b2MassData;\n\nPolygonShape = Box2D.Collision.Shapes.b2PolygonShape;\n\nCircleShape = Box2D.Collision.Shapes.b2CircleShape;\n\nDebugDraw = Box2D.Dynamics.b2DebugDraw;\n\nRevoluteJointDef = Box2D.Dynamics.Joints.b2RevoluteJointDef;\n\nPHYSICS_LOOP = 1 / 60;\n\n/*\nContains a map with all physics bodies.\nCan be used by Entities to decide whether they can move to a specific tile.\n@note The PhysicsManager expects only only one physics layer to be present\n*/\n\n\nmodule.exports = PhysicsManager = (function() {\n  PhysicsManager.prototype.world = null;\n\n  PhysicsManager.prototype.Vec2 = Box2D.Common.Math.b2Vec2;\n\n  PhysicsManager.prototype.BodyDef = Box2D.Dynamics.b2BodyDef;\n\n  PhysicsManager.prototype.Body = Box2D.Dynamics.b2Body;\n\n  PhysicsManager.prototype.FixtureDef = Box2D.Dynamics.b2FixtureDef;\n\n  PhysicsManager.prototype.Fixture = Box2D.Dynamics.b2Fixture;\n\n  PhysicsManager.prototype.World = Box2D.Dynamics.b2World;\n\n  PhysicsManager.prototype.MassData = Box2D.Collision.Shapes.b2MassData;\n\n  PhysicsManager.prototype.PolygonShape = Box2D.Collision.Shapes.b2PolygonShape;\n\n  PhysicsManager.prototype.CircleShape = Box2D.Collision.Shapes.b2CircleShape;\n\n  PhysicsManager.prototype.DebugDraw = Box2D.Dynamics.b2DebugDraw;\n\n  PhysicsManager.prototype.RevoluteJointDef = Box2D.Dynamics.Joints.b2RevoluteJointDef;\n\n  /*\n  @private\n  Initializes an instance\n  */\n\n\n  function PhysicsManager(map) {\n    var dCanvas, dCtx, debugDraw;\n    this.map = map;\n    this.removeBody = __bind(this.removeBody, this);\n    this.addBody = __bind(this.addBody, this);\n    this.registerBody = __bind(this.registerBody, this);\n    this.addContactListener = __bind(this.addContactListener, this);\n    this.update = __bind(this.update, this);\n    this.createLevelBorder = __bind(this.createLevelBorder, this);\n    this.createStaticBodyWithPolygon = __bind(this.createStaticBodyWithPolygon, this);\n    this.createStaticBodyWithBox = __bind(this.createStaticBodyWithBox, this);\n    this.addBackgroundRigidBodies = __bind(this.addBackgroundRigidBodies, this);\n    this.world = new World(new Vec2(0, 0), false);\n    debugDraw = new Box2D.Dynamics.b2DebugDraw();\n    dCanvas = document.getElementById('debug-canvas');\n    dCtx = dCanvas.getContext('2d');\n    this.createLevelBorder(this.map);\n    dCanvas.width = window.innerWidth / 2 - 100;\n    dCanvas.height = window.innerHeight - 100;\n    debugDraw.SetSprite(dCtx);\n    debugDraw.SetDrawScale(0.5);\n    debugDraw.SetFillAlpha(0.3);\n    debugDraw.SetLineThickness(1);\n    debugDraw.SetFlags(Box2D.Dynamics.b2DebugDraw.e_shapeBit | Box2D.Dynamics.b2DebugDraw.e_jointBit);\n    this.world.SetDebugDraw(debugDraw);\n    this.addBackgroundRigidBodies(this.map);\n    this.addContactListener();\n  }\n\n  PhysicsManager.prototype.addBackgroundRigidBodies = function() {\n    var layer, object, physicsTile, pkt, tileID, tileIndex, tileSize, vec2, vec2Array, x, y, _i, _len, _ref, _results;\n    _ref = this.map.layers;\n    _results = [];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      layer = _ref[_i];\n      if (layer.name !== 'physics') {\n        continue;\n      }\n      if (layer.type === 'objectgroup') {\n        _results.push((function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = layer.objects;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            object = _ref1[_j];\n            if (object.polygon) {\n              vec2Array = (function() {\n                var _k, _len2, _ref2, _results2;\n                _ref2 = object.polygon;\n                _results2 = [];\n                for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n                  vec2 = _ref2[_k];\n                  _results2.push(new Vec2(vec2.x, vec2.y));\n                }\n                return _results2;\n              })();\n              _results1.push(this.createStaticBodyWithPolygon(vec2Array, object.x, object.y));\n            } else {\n              _results1.push(this.createStaticBodyWithBox(object.x, object.y, object.width, object.height));\n            }\n          }\n          return _results1;\n        }).call(this));\n      } else if (layer.type === 'tilelayer') {\n        _results.push((function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = layer.data;\n          _results1 = [];\n          for (tileIndex = _j = 0, _len1 = _ref1.length; _j < _len1; tileIndex = ++_j) {\n            tileID = _ref1[tileIndex];\n            if (tileID === 0) {\n              continue;\n            }\n            x = (tileIndex % this.map.width) * this.map.tilewidth;\n            y = Math.floor(tileIndex / this.map.width) * this.map.tileheight;\n            pkt = mediator.mapManager.getTilePacket(tileID, this.map.processedTileSets);\n            physicsTile = pkt.px / this.map.tilewidth;\n            tileSize = this.map.tilewidth;\n            if (physicsTile === 0) {\n              _results1.push(this.createStaticBodyWithBox(x, y, tileSize, tileSize));\n            } else if (physicsTile === 1) {\n              vec2Array = [new Vec2(0, tileSize), new Vec2(tileSize, 0), new Vec2(tileSize, tileSize)];\n              _results1.push(this.createStaticBodyWithPolygon(vec2Array, x, y));\n            } else if (physicsTile === 2) {\n              vec2Array = [new Vec2(0, 0), new Vec2(tileSize, tileSize), new Vec2(0, tileSize)];\n              _results1.push(this.createStaticBodyWithPolygon(vec2Array, x, y));\n            } else if (physicsTile === 3) {\n              vec2Array = [new Vec2(0, 0), new Vec2(tileSize, 0), new Vec2(tileSize, tileSize)];\n              _results1.push(this.createStaticBodyWithPolygon(vec2Array, x, y));\n            } else if (physicsTile === 4) {\n              vec2Array = [new Vec2(0, 0), new Vec2(tileSize, 0), new Vec2(0, tileSize)];\n              _results1.push(this.createStaticBodyWithPolygon(vec2Array, x, y));\n            } else {\n              _results1.push(void 0);\n            }\n          }\n          return _results1;\n        }).call(this));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  PhysicsManager.prototype.createStaticBodyWithBox = function(x, y, w, h) {\n    var bgRigidBody, body, fixtureDefinition;\n    fixtureDefinition = new FixtureDef();\n    fixtureDefinition.shape = new PolygonShape();\n    fixtureDefinition.shape.SetAsBox(w / 2, h / 2);\n    bgRigidBody = new BodyDef();\n    bgRigidBody.type = Body.b2_staticBody;\n    bgRigidBody.position.x = x + w / 2;\n    bgRigidBody.position.y = y + h / 2;\n    body = this.registerBody(bgRigidBody);\n    return body.CreateFixture(fixtureDefinition);\n  };\n\n  PhysicsManager.prototype.createStaticBodyWithPolygon = function(vec2Array, x, y) {\n    var bgRigidBody, body, fixtureDefinition;\n    fixtureDefinition = new FixtureDef();\n    fixtureDefinition.shape = new PolygonShape();\n    fixtureDefinition.shape.SetAsArray(vec2Array, vec2Array.length);\n    bgRigidBody = new BodyDef();\n    bgRigidBody.type = Body.b2_staticBody;\n    bgRigidBody.position.x = x;\n    bgRigidBody.position.y = y;\n    body = this.registerBody(bgRigidBody);\n    return body.CreateFixture(fixtureDefinition);\n  };\n\n  /*\n  @todo movo to TiledMap\n  */\n\n\n  PhysicsManager.prototype.createLevelBorder = function() {\n    var body, fixtureDefinition, mapBorder;\n    fixtureDefinition = new FixtureDef();\n    fixtureDefinition.shape = new PolygonShape();\n    fixtureDefinition.shape.SetAsBox(0, this.map.tileheight * this.map.height);\n    mapBorder = new BodyDef();\n    mapBorder.type = Body.b2_staticBody;\n    mapBorder.position.x = 0;\n    mapBorder.position.y = 0;\n    body = this.registerBody(mapBorder, this.world);\n    body.CreateFixture(fixtureDefinition);\n    fixtureDefinition = new FixtureDef();\n    fixtureDefinition.shape = new PolygonShape();\n    fixtureDefinition.shape.SetAsBox(0, this.map.tileheight * this.map.height);\n    mapBorder = new BodyDef();\n    mapBorder.type = Body.b2_staticBody;\n    mapBorder.position.x = this.map.tilewidth * this.map.width;\n    mapBorder.position.y = 0;\n    body = this.registerBody(mapBorder, this.world);\n    body.CreateFixture(fixtureDefinition);\n    fixtureDefinition = new FixtureDef();\n    fixtureDefinition.shape = new PolygonShape();\n    fixtureDefinition.shape.SetAsBox(this.map.tilewidth * this.map.width, 0);\n    mapBorder = new BodyDef();\n    mapBorder.type = Body.b2_staticBody;\n    mapBorder.position.x = 0;\n    mapBorder.position.y = 0;\n    body = this.registerBody(mapBorder, this.world);\n    body.CreateFixture(fixtureDefinition);\n    fixtureDefinition = new FixtureDef();\n    fixtureDefinition.shape = new PolygonShape();\n    fixtureDefinition.shape.SetAsBox(this.map.tilewidth * this.map.width, 0);\n    mapBorder = new BodyDef();\n    mapBorder.type = Body.b2_staticBody;\n    mapBorder.position.x = 0;\n    mapBorder.position.y = this.map.tileheight * this.map.height;\n    body = this.registerBody(mapBorder, this.world);\n    return body.CreateFixture(fixtureDefinition);\n  };\n\n  PhysicsManager.prototype.update = function() {\n    return this.world.Step(PHYSICS_LOOP, 10, 10);\n  };\n\n  PhysicsManager.prototype.addContactListener = function() {\n    var listener;\n    listener = new Box2D.Dynamics.b2ContactListener();\n    listener.BeginContact = function(contact) {\n      var bodyA, bodyB, dataA, dataB, eventA, eventB;\n      bodyA = contact.GetFixtureA().GetBody();\n      bodyB = contact.GetFixtureB().GetBody();\n      dataA = bodyA.GetUserData();\n      dataB = bodyB.GetUserData();\n      eventA = {\n        type: 'touchBegin',\n        \"arguments\": [bodyB]\n      };\n      eventB = {\n        type: 'touchBegin',\n        \"arguments\": [bodyA]\n      };\n      if (dataA != null) {\n        dataA.ent.fire(eventA);\n      }\n      return dataB != null ? dataB.ent.fire(eventB) : void 0;\n    };\n    listener.EndContact = function(contact) {\n      var bodyA, bodyB, dataA, dataB, eventA, eventB;\n      bodyA = contact.GetFixtureA().GetBody();\n      bodyB = contact.GetFixtureB().GetBody();\n      dataA = bodyA.GetUserData();\n      dataB = bodyB.GetUserData();\n      eventA = {\n        type: 'touchEnd',\n        \"arguments\": [bodyB]\n      };\n      eventB = {\n        type: 'touchEnd',\n        \"arguments\": [bodyA]\n      };\n      if (dataA != null) {\n        dataA.ent.fire(eventA);\n      }\n      return dataB != null ? dataB.ent.fire(eventB) : void 0;\n    };\n    listener.PostSolve = function(contact, impulse) {\n      var bodyA, bodyB, dataA, dataB, eventA, eventB;\n      bodyA = contact.GetFixtureA().GetBody();\n      bodyB = contact.GetFixtureB().GetBody();\n      dataA = bodyA.GetUserData();\n      dataB = bodyB.GetUserData();\n      impulse = impulse.normalImpulses[0];\n      eventA = {\n        type: 'touch',\n        \"arguments\": [bodyB, impulse]\n      };\n      eventB = {\n        type: 'touch',\n        \"arguments\": [bodyA, impulse]\n      };\n      if (dataA != null) {\n        dataA.ent.fire(eventA);\n      }\n      return dataB != null ? dataB.ent.fire(eventB) : void 0;\n    };\n    return this.world.SetContactListener(listener);\n  };\n\n  PhysicsManager.prototype.registerBody = function(bodyDef) {\n    var body;\n    return body = this.world.CreateBody(bodyDef);\n  };\n\n  PhysicsManager.prototype.addBody = function(entityDef) {\n    var body, bodyDef, fixtureDefinition, halfHeight, halfWidth;\n    bodyDef = new BodyDef();\n    halfWidth = Math.floor(entityDef.width / 2);\n    halfHeight = Math.floor(entityDef.height / 2);\n    if (entityDef.type === 'static') {\n      bodyDef.type = Body.b2_staticBody;\n    } else {\n      bodyDef.type = Body.b2_dynamicBody;\n    }\n    bodyDef.position.x = entityDef.x + halfWidth;\n    bodyDef.position.y = entityDef.y + halfHeight;\n    if (entityDef.userData) {\n      bodyDef.userData = entityDef.userData;\n    }\n    body = this.registerBody(bodyDef);\n    fixtureDefinition = new FixtureDef();\n    if (entityDef.isSensor) {\n      fixtureDefinition.isSensor = true;\n    }\n    if (entityDef.ellipse) {\n      fixtureDefinition.shape = new CircleShape();\n      fixtureDefinition.shape.SetRadius(halfWidth);\n    } else {\n      fixtureDefinition.shape = new PolygonShape();\n      fixtureDefinition.shape.SetAsBox(halfWidth, halfHeight);\n    }\n    body.CreateFixture(fixtureDefinition);\n    return body;\n  };\n\n  PhysicsManager.prototype.removeBody = function(obj) {\n    return this.world.DestroyBody(obj);\n  };\n\n  return PhysicsManager;\n\n})();\n","/*\nA Result represents the...well...result of a Task.\n\nAny function given to {Scriptable#addTask} is expected to return a {Result}.\n*/\n\nvar Result,\n  __slice = [].slice;\n\nmodule.exports = Result = (function() {\n  /*\n  @property [Boolean]\n  Represents wether the Task returning this Result has finished.\n  */\n\n  Result.prototype.done = true;\n\n  /*\n  @property [Function]\n  The next Task that should be called before handling other ones.\n  */\n\n\n  Result.prototype.next = null;\n\n  /*\n  @property [Array]\n  The arguments that should be passed to {#next}\n  */\n\n\n  Result.prototype[\"arguments\"] = null;\n\n  /*\n  @param [Boolean] done see {#done}\n  @param [Function] next see {#next}\n  @param [Array] args... see {#arguments}\n  */\n\n\n  function Result() {\n    var args, done, next;\n    done = arguments[0], next = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];\n    this.done = done;\n    this.next = next;\n    this[\"arguments\"] = args;\n  }\n\n  return Result;\n\n})();\n","var Model, SoundManager, SoundObj, mediator, _ref,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nModel = require('models/base/model');\n\nSoundObj = require('core/SoundObj');\n\nmediator = Chaplin.mediator;\n\nmodule.exports = SoundManager = (function(_super) {\n  __extends(SoundManager, _super);\n\n  function SoundManager() {\n    this.startAll = __bind(this.startAll, this);\n    this.fade = __bind(this.fade, this);\n    this.updateBackgroundSounds = __bind(this.updateBackgroundSounds, this);\n    this.startThemeSound = __bind(this.startThemeSound, this);\n    this.startBackgroundSounds = __bind(this.startBackgroundSounds, this);\n    this.stopAll = __bind(this.stopAll, this);\n    this.stop = __bind(this.stop, this);\n    this.playSound = __bind(this.playSound, this);\n    this.bufferSounds = __bind(this.bufferSounds, this);\n    this.loadSounds = __bind(this.loadSounds, this);\n    this.getSoundMap = __bind(this.getSoundMap, this);\n    this.initialize = __bind(this.initialize, this);\n    _ref = SoundManager.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  /*\n  Initialize Soundmanager.\n  Create a new audio context and bind soundManager to mediator\n  */\n\n\n  SoundManager.prototype.initialize = function() {\n    SoundManager.__super__.initialize.apply(this, arguments);\n    mediator.soundManager = this;\n    if (typeof webkitAudioContext !== \"undefined\" && webkitAudioContext !== null) {\n      this.audioContext = new webkitAudioContext();\n    } else {\n      mediator.playWithSounds = false;\n    }\n    this.globalSoundList = {};\n    return this.lastLevelTheme = \"\";\n  };\n\n  /*\n  @param [Object]\n  Initializes soundMap for backgroundSounds\n  */\n\n\n  SoundManager.prototype.getSoundMap = function(map) {\n    var layer, soundMap, tileID, tileIndex, x, y, _i, _j, _k, _len, _len1, _ref1, _ref2, _ref3;\n    soundMap = [];\n    for (x = _i = 0, _ref1 = map.width - 1; 0 <= _ref1 ? _i <= _ref1 : _i >= _ref1; x = 0 <= _ref1 ? ++_i : --_i) {\n      soundMap[x] = (function() {\n        var _j, _ref2, _results;\n        _results = [];\n        for (y = _j = 0, _ref2 = map.height - 1; 0 <= _ref2 ? _j <= _ref2 : _j >= _ref2; y = 0 <= _ref2 ? ++_j : --_j) {\n          _results.push([]);\n        }\n        return _results;\n      })();\n    }\n    _ref2 = map.layers;\n    for (_j = 0, _len = _ref2.length; _j < _len; _j++) {\n      layer = _ref2[_j];\n      if (layer.name !== 'sound') {\n        continue;\n      }\n      _ref3 = layer.data;\n      for (tileIndex = _k = 0, _len1 = _ref3.length; _k < _len1; tileIndex = ++_k) {\n        tileID = _ref3[tileIndex];\n        if (tileID === 0) {\n          continue;\n        }\n        x = tileIndex % map.width;\n        y = Math.floor(tileIndex / map.width);\n        soundMap[x][y].push(layer.properties);\n      }\n    }\n    return soundMap;\n  };\n\n  /*\n  @param [Array]\n  @param [function]\n  Load sounds\n  */\n\n\n  SoundManager.prototype.loadSounds = function(mapSounds, callback) {\n    var sound, _i, _j, _len, _len1, _ref1, _ref2;\n    this.soundCount = mapSounds.sounds.length + mapSounds.backgroundSounds.length + 1;\n    _ref1 = mapSounds.sounds;\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      sound = _ref1[_i];\n      if (this.globalSoundList[sound] == null) {\n        this.globalSoundList[sound] = new SoundObj;\n        mediator.std.xhrGet(mapSounds.prefix + sound, this.bufferSounds, 'arraybuffer', sound, callback);\n      } else {\n        callback();\n      }\n    }\n    _ref2 = mapSounds.backgroundSounds;\n    for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {\n      sound = _ref2[_j];\n      if (this.globalSoundList[sound] == null) {\n        this.globalSoundList[sound] = new SoundObj;\n        mediator.std.xhrGet(mapSounds.prefix + sound, this.bufferSounds, 'arraybuffer', sound, callback);\n      } else {\n        callback();\n      }\n    }\n    if (this.globalSoundList[mapSounds.theme] == null) {\n      this.globalSoundList[mapSounds.theme] = new SoundObj;\n      return mediator.std.xhrGet(mapSounds.prefix + mapSounds.theme, this.bufferSounds, 'arraybuffer', mapSounds.theme, callback);\n    } else {\n      return callback();\n    }\n  };\n\n  /*\n  @param [xhrGethttp-request]\n  Buffer the sound we just got from xhrGet request and put it into the corresponding SourceNode in the audio context\n  @note later trigger the observer event for 'all sounds loaded'\n  */\n\n\n  SoundManager.prototype.bufferSounds = function(event) {\n    var buffer, callback, request, sound,\n      _this = this;\n    request = event.target;\n    sound = request.additionalAttributes[0];\n    callback = request.additionalAttributes[1];\n    return buffer = this.audioContext.decodeAudioData(request.response, function(buffer) {\n      _this.globalSoundList[sound].buffer = buffer;\n      console.debug('@s loaded', sound);\n      return typeof callback === \"function\" ? callback() : void 0;\n    });\n  };\n\n  /*\n  @param [String]\n  @param [Double]\n  @param [Bool]\n  Play sound of list with volume and loop\n  */\n\n\n  SoundManager.prototype.playSound = function(sound, volume, loops) {\n    var sourceNode;\n    if (this.globalSoundList[sound].isPlaying !== true) {\n      sourceNode = this.audioContext.createBufferSource();\n      sourceNode.buffer = this.globalSoundList[sound].buffer;\n      sourceNode.loop = loops;\n      sourceNode.gain.value = volume;\n      sourceNode.connect(this.audioContext.destination);\n      this.globalSoundList[sound].sourceNode = sourceNode;\n      sourceNode.start(0);\n      return this.globalSoundList[sound].isPlaying = true;\n    } else {\n      return this.fade(sound, volume, 0);\n    }\n  };\n\n  /*\n  @param [String]\n  Stop sound\n  */\n\n\n  SoundManager.prototype.stop = function(sound) {\n    if (this.globalSoundList[sound].isPlaying) {\n      this.globalSoundList[sound].sourceNode.stop(this.audioContext.currentTime);\n      this.globalSoundList[sound].isPlaying = false;\n      return console.debug('@s.mp3 stopped', sound);\n    }\n  };\n\n  /*\n  @param [Object]\n  Stop all with config specified sounds in active level\n  */\n\n\n  SoundManager.prototype.stopAll = function(config) {\n    var name, sound, soundsToStop, _i, _j, _len, _len1, _ref1, _ref2, _ref3, _results;\n    soundsToStop = [];\n    if (config != null ? config.themeSound : void 0) {\n      soundsToStop.push(mediator.getActiveLevel().themeSound);\n    } else {\n      this.lastLevelTheme = mediator.getActiveLevel().themeSound;\n    }\n    if (config != null ? config.backgroundSounds : void 0) {\n      _ref1 = mediator.getActiveLevel().backgroundSoundList;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        sound = _ref1[_i];\n        soundsToStop.push(sound);\n      }\n    }\n    if (config != null ? config.sounds : void 0) {\n      _ref2 = mediator.getActiveLevel().mapSoundList;\n      for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {\n        sound = _ref2[_j];\n        soundsToStop.push(sound);\n      }\n    }\n    _ref3 = this.globalSoundList;\n    _results = [];\n    for (name in _ref3) {\n      sound = _ref3[name];\n      if ((soundsToStop.indexOf(name)) !== -1) {\n        _results.push(this.stop(name));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  /*\n  Start all background sounds in backgroundSoundList of active level with gain = 0, i.e. muted\n  */\n\n\n  SoundManager.prototype.startBackgroundSounds = function() {\n    var sound, _i, _len, _ref1, _results;\n    _ref1 = mediator.getActiveLevel().backgroundSoundList;\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      sound = _ref1[_i];\n      _results.push(this.playSound(sound, 0, true));\n    }\n    return _results;\n  };\n\n  /*\n  Start theme of level\n  Fade the if it stays the same on level change\n  */\n\n\n  SoundManager.prototype.startThemeSound = function() {\n    var intensity, theme;\n    theme = mediator.getActiveLevel().themeSound;\n    intensity = mediator.getActiveLevel().themeIntensity;\n    if (this.lastLevelTheme === theme) {\n      return this.fade(theme, intensity, 0);\n    } else {\n      if (this.globalSoundList[this.lastLevelTheme] != null) {\n        this.stop(this.lastLevelTheme);\n      }\n      return this.playSound(theme, intensity, true);\n    }\n  };\n\n  /*\n  @param [Object]\n  Look for backgroundSounds to play on the player position on the soundMap and update their gain\n  @todo maybe look for an optimization here\n  */\n\n\n  SoundManager.prototype.updateBackgroundSounds = function(PlayerPosition) {\n    var lvl, sound, _i, _j, _len, _len1, _ref1, _ref2, _results;\n    this.backgroundSoundsToPlay = [];\n    lvl = mediator.getActiveLevel();\n    _ref1 = lvl.soundMap[Math.floor(PlayerPosition.x / 32)][Math.floor(PlayerPosition.y / 32)];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      sound = _ref1[_i];\n      this.fade(sound.type + '.mp3', sound.intensity / 100, 1);\n      this.backgroundSoundsToPlay.push(sound.type + '.mp3');\n    }\n    _ref2 = lvl.backgroundSoundList;\n    _results = [];\n    for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {\n      sound = _ref2[_j];\n      if (this.backgroundSoundsToPlay.indexOf(sound) === -1) {\n        _results.push(this.fade(sound, 0, 1));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  /*\n  @param [String]\n  @param [Double]\n  @param [Double]\n  Fade sound to volume\n  */\n\n\n  SoundManager.prototype.fade = function(sound, volume, interval) {\n    return this.globalSoundList[sound].sourceNode.gain.setTargetAtTime(volume, this.audioContext.currentTime, interval);\n  };\n\n  SoundManager.prototype.startAll = function() {\n    this.startThemeSound();\n    this.startBackgroundSounds();\n    return this.updateBackgroundSounds(mediator.getActiveLevel().player.position);\n  };\n\n  return SoundManager;\n\n})(Model);\n","var Model, SoundObj, mediator;\n\nModel = require('models/base/model');\n\nmediator = Chaplin.mediator;\n\nmodule.exports = SoundObj = (function() {\n  function SoundObj() {\n    this.sourceNode = null;\n    this.gainNode = null;\n    this.buffer = null;\n    this.isPlaying = false;\n  }\n\n  return SoundObj;\n\n})();\n","/*\nLoads and renders a level.\n@note emits `map:rendered` event when map ist fully rendered\n*/\n\nvar TILEDMap;\n\nmodule.exports = TILEDMap = (function() {\n  function TILEDMap() {}\n\n  /*\n  @private\n  Parses TILED map editor json data\n  @param [Object] mapTiledObject the parsed TILED map editor map data\n  */\n\n\n  TILEDMap.parseMapJSON = function(mapTiledObject, callback) {\n    var imgLoadCount, tileset, tilesets;\n    console.debug('Start loading atlasses');\n    imgLoadCount = mapTiledObject.tilesets.length;\n    return tilesets = (function() {\n      var _i, _len, _ref, _results,\n        _this = this;\n      _ref = mapTiledObject.tilesets;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        tileset = _ref[_i];\n        _results.push(this.createTileSet(tileset, function() {\n          imgLoadCount--;\n          if (imgLoadCount <= 0) {\n            return callback(tilesets);\n          } else {\n            return console.debug(\"\" + imgLoadCount + \" tile sets to go. Hang in there!\");\n          }\n        }));\n      }\n      return _results;\n    }).call(TILEDMap);\n  };\n\n  /*\n  @private\n  Loads an atlas referenced from the map file and returns it\n  @param [Object] tileset a tileset from the map json\n  @return [Object] most important data from that tileset\n  @example The returned Object:\n    ts =\n      firstgid: …    # look at https://github.com/bjorn/tiled/wiki/TMX-Map-Format\n      image: …       # the loaded atlas image\n      imageheight: … # the atlas's height in pixels\n      imagewidth: …  # the atlas's width in pixels\n      name: …        # the atlas's name\n      numXTiles: …   # number of tiles in x direction\n      numYTiles: …   # number of tiles in y direction\n  */\n\n\n  TILEDMap.createTileSet = function(tileset, callback) {\n    var img, ts;\n    img = new Image();\n    img.onload = function() {\n      return callback();\n    };\n    img.src = 'gameassets/atlases/' + tileset.image.replace(/^.*[\\\\\\/]/, '');\n    return ts = {\n      firstgid: tileset.firstgid,\n      image: img,\n      imageheight: tileset.imageheight,\n      imagewidth: tileset.imagewidth,\n      tileheight: tileset.tileheight,\n      tilewidth: tileset.tilewidth,\n      name: tileset.name,\n      numXTiles: Math.floor(tileset.imagewidth / (tileset.tilewidth + tileset.spacing)),\n      numYTiles: Math.floor(tileset.imageheight / (tileset.tileheight + tileset.spacing)),\n      spacing: tileset.spacing\n    };\n  };\n\n  /*\n  @private\n  Takes a tile ID and returns the tile's atlas and position\n  @param [Integer] tileIndex a tile ID\n  @return [Object] the tile's atlas and position\n  @example the returned Object:\n    pkt =\n      img: … # the atlas where the tile is situated\n      px: …  # x value of the top left corner in pixels\n      py: …  # y value of the top left corner in pixels\n  */\n\n\n  TILEDMap.getTilePacket = function(tileIndex, tileSets) {\n    var lTileX, lTileY, localIdx, pkt, tile, _i;\n    pkt = {\n      img: null,\n      px: 0,\n      py: 0\n    };\n    tile = null;\n    for (_i = tileSets.length - 1; _i >= 0; _i += -1) {\n      tile = tileSets[_i];\n      if (tile.firstgid <= tileIndex) {\n        break;\n      }\n    }\n    pkt.img = tile.image;\n    localIdx = tileIndex - tile.firstgid;\n    lTileX = Math.floor(localIdx % tile.numXTiles);\n    lTileY = Math.floor(localIdx / tile.numXTiles);\n    pkt.py = lTileY * (tile.tileheight + tile.spacing) + tile.spacing;\n    pkt.px = lTileX * (tile.tilewidth + tile.spacing) + tile.spacing;\n    return pkt;\n  };\n\n  /*\n  Renders the map into it's own off screen canvas.\n  This means the whol background can be drawn with one single draw\n  call instead of hundreads.\n  */\n\n\n  TILEDMap.render = function(mapTiledObject, tilesets) {\n    var canvas, coords, ctx, layer, tID, tPKT, tileIDX, _i, _j, _len, _len1, _ref, _ref1;\n    canvas = document.createElement('canvas');\n    ctx = canvas.getContext('2d');\n    canvas.width = mapTiledObject.width * mapTiledObject.tilewidth;\n    canvas.height = mapTiledObject.height * mapTiledObject.tileheight;\n    console.debug('Finished loading atlasses');\n    _ref = mapTiledObject.layers;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      layer = _ref[_i];\n      if (layer.type !== 'tilelayer') {\n        continue;\n      }\n      if (layer.name === 'sound' || layer.name === 'physics') {\n        continue;\n      }\n      _ref1 = layer.data;\n      for (tileIDX = _j = 0, _len1 = _ref1.length; _j < _len1; tileIDX = ++_j) {\n        tID = _ref1[tileIDX];\n        if (tID === 0) {\n          continue;\n        }\n        tPKT = TILEDMap.getTilePacket(tID, tilesets);\n        coords = {\n          x: (tileIDX % mapTiledObject.width) * mapTiledObject.tilewidth,\n          y: Math.floor(tileIDX / mapTiledObject.width) * mapTiledObject.tileheight\n        };\n        ctx.drawImage(tPKT.img, tPKT.px, tPKT.py, mapTiledObject.tilewidth, mapTiledObject.tileheight, coords.x, coords.y, mapTiledObject.tilewidth, mapTiledObject.tileheight);\n      }\n    }\n    return canvas;\n  };\n\n  TILEDMap.parse = function(mapTiledObject, callback) {\n    return TILEDMap.parseMapJSON(mapTiledObject, function(tilesets) {\n      return callback(TILEDMap.render(mapTiledObject, tilesets), tilesets);\n    });\n  };\n\n  return TILEDMap;\n\n}).call(this);\n","var mapPrefix, mediator, soundPrefix;\n\nmediator = Chaplin.mediator;\n\nsoundPrefix = 'gameassets/sounds/';\n\nmapPrefix = 'gameassets/map';\n\n/*\n@example\n  mediator.configurationManager.configure player 'Player'\n*/\n\n\nmodule.exports = {\n  configure: function(object, configuration) {\n    if (this[configuration] != null) {\n      this[configuration].apply(object);\n    } else {\n      console.error(\"Configuration \" + configuration + \" not found!\");\n    }\n    return object;\n  },\n  promisedConfigure: function(object, configuration) {\n    var deferred;\n    deferred = Q.defer();\n    this.configure(object, configuration);\n    deferred.resolve(object);\n    return deferred.promise;\n  },\n  level1: function() {\n    this.sounds = {\n      prefix: soundPrefix,\n      sounds: ['jtTheme.mp3'],\n      theme: 'level1theme.mp3',\n      backgroundSounds: ['water.mp3', 'fire.mp3', 'wood.mp3']\n    };\n    return this.map = {\n      prefix: mapPrefix,\n      file: 'level1.json'\n    };\n  },\n  level2: function() {\n    this.sounds = {\n      prefix: soundPrefix,\n      sounds: [],\n      theme: 'level2theme.mp3',\n      backgroundSounds: []\n    };\n    return this.map = {\n      prefix: mapPrefix,\n      file: 'level2.json'\n    };\n  },\n  level2house1: function() {\n    this.sounds = {\n      prefix: soundPrefix,\n      sounds: [],\n      theme: 'level2theme.mp3',\n      themeIntensity: 0.3,\n      backgroundSounds: []\n    };\n    return this.map = {\n      prefix: mapPrefix,\n      file: 'level2house1.json'\n    };\n  },\n  level2house2: function() {\n    this.sounds = {\n      prefix: soundPrefix,\n      sounds: [],\n      theme: 'level2theme.mp3',\n      themeIntensity: 0.3,\n      backgroundSounds: []\n    };\n    return this.map = {\n      prefix: mapPrefix,\n      file: 'level2house2.json'\n    };\n  },\n  level3: function() {\n    this.sounds = {\n      prefix: soundPrefix,\n      sounds: [],\n      theme: 'underground.mp3',\n      backgroundSounds: []\n    };\n    return this.map = {\n      prefix: mapPrefix,\n      file: 'level3.json'\n    };\n  },\n  level4: function() {\n    this.sounds = {\n      prefix: soundPrefix,\n      sounds: [],\n      theme: 'underground.mp3',\n      backgroundSounds: []\n    };\n    return this.map = {\n      prefix: mapPrefix,\n      file: 'level4.json'\n    };\n  },\n  level5: function() {\n    this.sounds = {\n      prefix: soundPrefix,\n      sounds: [],\n      theme: 'level2theme.mp3',\n      backgroundSounds: []\n    };\n    return this.map = {\n      prefix: mapPrefix,\n      file: 'level5.json'\n    };\n  },\n  level6: function() {\n    this.sounds = {\n      prefix: soundPrefix,\n      sounds: [],\n      theme: 'level2theme.mp3',\n      backgroundSounds: []\n    };\n    return this.map = {\n      prefix: mapPrefix,\n      file: 'level6.json'\n    };\n  },\n  level7: function() {\n    this.sounds = {\n      prefix: soundPrefix,\n      sounds: [],\n      theme: 'level2theme.mp3',\n      backgroundSounds: []\n    };\n    return this.map = {\n      prefix: mapPrefix,\n      file: 'level7.json'\n    };\n  },\n  Player: function() {\n    this.velocity = 200;\n    this.visual.spriteState.viewDirection = 2;\n    this.visual.atlas.src = 'gameassets/atlases/warrior_m.png';\n    this.visual.tileSet.tilesX = 3;\n    this.visual.tileSet.tilesY = 4;\n    this.visual.tileSet.tileheight = 32;\n    this.visual.tileSet.tilewidth = 32;\n    return this.visual.tileSet.offset = {\n      x: 16,\n      y: 24\n    };\n  },\n  PlayerSkeleton: function() {\n    this.velocity = 250;\n    this.visual.atlas.src = 'gameassets/atlases/nick.png';\n    this.visual.tileSet.tilesX = 3;\n    this.visual.tileSet.tilesY = 4;\n    this.visual.tileSet.tileheight = 32;\n    this.visual.tileSet.tilewidth = 32;\n    return this.visual.tileSet.offset = {\n      x: 16,\n      y: 24\n    };\n  },\n  Mario1: function() {},\n  Mario2: function() {},\n  Mario3: function() {\n    var dm,\n      _this = this;\n    dm = mediator.dialogManager;\n    return this.onAction = function() {\n      var data;\n      data = {\n        speaker: 'Mario',\n        text: 'Hey there. I love being beaten by this Mushroom-Guy. Please, stay there, stare and do nothing.',\n        options: 'Okay. Bye.'\n      };\n      return dm.showDialog(data, function() {\n        data.text = 'Are you kidding me? Beat this thing to death. And do it painfully with all your strength. Please.';\n        return dm.showDialog(data);\n      });\n    };\n  },\n  Gumba: function() {\n    var _this = this;\n    this.hit = 5;\n    return this.onAction = function() {\n      if (_this.hit-- < 0) {\n        return _this.kill();\n      }\n    };\n  },\n  Yeti: function() {\n    this.velocity = 200;\n    this.visual.atlas.src = 'gameassets/atlases/yetis.png';\n    this.visual.tileSet.tilesX = 3;\n    this.visual.tileSet.tilesY = 4;\n    this.visual.tileSet.tileheight = 32;\n    this.visual.tileSet.tilewidth = 32;\n    return this.visual.tileSet.offset = {\n      x: 16,\n      y: 24\n    };\n  }\n};\n","var Model, Std, mediator, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  __slice = [].slice;\n\nModel = require('models/base/model');\n\nmediator = Chaplin.mediator;\n\nmodule.exports = Std = (function(_super) {\n  __extends(Std, _super);\n\n  function Std() {\n    _ref = Std.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  Std.prototype.initialize = function() {\n    return mediator.std = this;\n  };\n\n  /*\n  Starts a XMLHttpRequest and calls the given callback when finished loading.\n  @param [String] reqUri URI to the file to be loaded\n  @param [Function] callback Callback function\n  @param [String] responseType\n  @param [Objects] additionalAttributes Will be added as an array to XMLHttpRequest.additionalAttributes\n  */\n\n\n  Std.prototype.xhrGet = function() {\n    var additionalAttributes, callback, reqUri, responseType, xhr;\n    reqUri = arguments[0], callback = arguments[1], responseType = arguments[2], additionalAttributes = 4 <= arguments.length ? __slice.call(arguments, 3) : [];\n    xhr = new XMLHttpRequest();\n    if (responseType != null) {\n      xhr.responseType = responseType;\n    }\n    xhr.additionalAttributes = additionalAttributes;\n    xhr.open('GET', reqUri, true);\n    xhr.onload = callback;\n    return xhr.send();\n  };\n\n  return Std;\n\n})(Model);\n","var Entity, Event, Scriptable,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nEntity = require('core/Entity');\n\nScriptable = require('components/Scriptable');\n\nmodule.exports = Event = (function(_super) {\n  __extends(Event, _super);\n\n  function Event(owningLevel, object) {\n    object.properties.physicsType = 'static';\n    object.properties.isSensor = true;\n    Event.__super__.constructor.call(this, owningLevel, object);\n    this.scriptable = new Scriptable(this);\n  }\n\n  return Event;\n\n})(Entity);\n","var Entity, Gumba, Visual, mediator,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nEntity = require('core/Entity');\n\nVisual = require('components/Visual');\n\nmediator = Chaplin.mediator;\n\nmodule.exports = Gumba = (function(_super) {\n  __extends(Gumba, _super);\n\n  function Gumba(owningLevel, object) {\n    this.update = __bind(this.update, this);\n    var v;\n    object.properties.physicsType = 'static';\n    Gumba.__super__.constructor.call(this, owningLevel, object);\n    this.visual = v = new Visual(this);\n    (function(v) {\n      v.atlas.src = 'gameassets/atlases/gumba.png';\n      v.spriteState.viewDirection = 2;\n      v.tileSet.tilesX = 3;\n      v.tileSet.tilesY = 4;\n      v.tileSet.tileheight = 32;\n      v.tileSet.tilewidth = 32;\n      return v.tileSet.offset = {\n        x: 14,\n        y: 24\n      };\n    })(v);\n  }\n\n  Gumba.prototype.update = function() {\n    return Gumba.__super__.update.apply(this, arguments);\n  };\n\n  return Gumba;\n\n})(Entity);\n","var Event, Level1Event1, Result, mediator, story,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nEvent = require('entities/Event');\n\nmediator = Chaplin.mediator;\n\nstory = require('story/level1');\n\nResult = require('core/Result');\n\nmodule.exports = Level1Event1 = (function(_super) {\n  __extends(Level1Event1, _super);\n\n  function Level1Event1(owningLevel, object) {\n    this._activateYetis2 = __bind(this._activateYetis2, this);\n    this._activateYetis = __bind(this._activateYetis, this);\n    this._spawnYetis = __bind(this._spawnYetis, this);\n    var _this = this;\n    Level1Event1.__super__.constructor.call(this, owningLevel, object);\n    this.dm = mediator.dialogManager;\n    this.addOneTimeListener('touchBegin', function() {\n      return _this.level.addTask(_this._spawnYetis);\n    });\n    this.addOneTimeListener('touchEnd', this._activateYetis2);\n  }\n\n  /*\n  This event handler is going to be called every time another\n  entity starts or ends touching it, as well as continuously if\n  an entity keeps touching it.\n  @param [event] Event object.\n  @see #constructor\n  */\n\n\n  Level1Event1.prototype._spawnYetis = function(event) {\n    var config, jt, ss;\n    jt = _.clone(ss = {\n      name: 'Yeti',\n      type: 'Yeti',\n      x: 16 * 32,\n      y: 16,\n      width: 32,\n      height: 32,\n      properties: {}\n    });\n    ss.x = 17 * 32;\n    this.jt = this.level.addEntity(jt);\n    this.ss = this.level.addEntity(ss);\n    if (mediator.playWithSounds) {\n      mediator.soundManager.stopAll(config = {\n        themeSound: true,\n        backgroundSounds: true\n      });\n      mediator.soundManager.playSound(this.level.manifest.sounds.sounds[0], 1, true);\n    }\n    return new Result(true);\n  };\n\n  /*\n  This event handler is going to be called only once, on the first\n  update.\n  @param [event] Event object\n  @see #constructor\n  */\n\n\n  Level1Event1.prototype._activateYetis = function(event) {\n    var body,\n      _this = this;\n    body = event[\"arguments\"][0];\n    this.player = body.GetUserData().ent;\n    this.jt = this.jt;\n    this.ss = this.ss;\n    this.dm.hideDialog();\n    return this.jt.blockInput().then(function() {\n      return _this.jt.moveDown(150);\n    }).then(function() {\n      return _this.jt.moveLeft(60);\n    }).then(function() {\n      return _this.dm.showDialog(story[1]);\n    }).then(function() {\n      return _this.dm.showDialog(story[2]);\n    }).then(function() {\n      return Q.all([\n        (_this.ss.moveDown(150)).then(function() {\n          return _this.ss.moveLeft(90);\n        }), (_this.jt.moveDown(90)).then(function() {\n          return _this.jt.moveLeft(30);\n        })\n      ]);\n    }).then(function() {\n      return _this.dm.showDialog(story[3]);\n    }).then(function() {\n      return _this.dm.showDialog(story[4]);\n    }).then(function() {\n      return _this.dm.showDialog(story[5]);\n    }).then(function() {\n      return _this.dm.showDialog(story[6]);\n    }).then(function() {\n      mediator.configurationManager.configure(_this.player, 'PlayerSkeleton');\n      return Q.all([\n        (_this.jt.moveRight(80)).then(function() {\n          return _this.jt.moveUp(250);\n        }), (_this.ss.moveRight(60)).then(function() {\n          return _this.ss.moveUp(165);\n        })\n      ]);\n    }).then(function() {\n      return Q.all([_this.ss.kill(), _this.jt.kill()]);\n    }).then(function() {\n      return _this.dm.showDialog(story[7]);\n    }).then(this.unblockInput);\n  };\n\n  /*\n  This event handler is going to be called only once, on the first\n  update.\n  @param [event] Event object\n  @see #constructor\n  */\n\n\n  Level1Event1.prototype._activateYetis2 = function(event) {\n    var body,\n      _this = this;\n    body = event[\"arguments\"][0];\n    this.player = body.GetUserData().ent;\n    return this.jt.addScripts([\n      this.dm.hideDialog, this.jt.blockInput, [this.jt.moveDown, 150], [this.jt.moveLeft, 60], [this.dm.showDialog, story[1]], [this.dm.showDialog, story[2]], [[[this.ss.moveDown, 150], [this.ss.moveLeft, 50]], [[this.ss.moveLeft, 40]], [[this.jt.moveDown, 90], [this.jt.moveLeft, 30]]], [this.dm.showDialog, story[3]], [this.dm.showDialog, story[4]], [this.dm.showDialog, story[5]], [this.dm.showDialog, story[6]], function() {\n        return mediator.configurationManager.promisedConfigure(_this.player, 'PlayerSkeleton');\n      }, [[[this.jt.moveRight, 80], [this.jt.moveUp, 250]], [[this.ss.moveRight, 60], [this.ss.moveUp, 165]]], [this.ss.kill], [this.jt.kill], [this.dm.showDialog, story[7]], [this.unblockInput]\n    ]);\n  };\n\n  return Level1Event1;\n\n})(Event);\n","var Event, Level1NickTalking, mediator, story,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nEvent = require('entities/Event');\n\nmediator = Chaplin.mediator;\n\nstory = require('story/level1');\n\nmodule.exports = Level1NickTalking = (function(_super) {\n  __extends(Level1NickTalking, _super);\n\n  function Level1NickTalking(owningLevel, object) {\n    this._nickTalks = __bind(this._nickTalks, this);\n    Level1NickTalking.__super__.constructor.call(this, owningLevel, object);\n    this.addOneTimeListener('touchEnd', this._nickTalks);\n  }\n\n  Level1NickTalking.prototype._nickTalks = function(event) {\n    return mediator.dialogManager.showDialog(story[9]);\n  };\n\n  return Level1NickTalking;\n\n})(Event);\n","var Event, Level1Prolog, mediator, story,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nEvent = require('entities/Event');\n\nmediator = Chaplin.mediator;\n\nstory = require('story/level1');\n\nmodule.exports = Level1Prolog = (function(_super) {\n  __extends(Level1Prolog, _super);\n\n  function Level1Prolog(owningLevel, object) {\n    this._showProlog = __bind(this._showProlog, this);\n    Level1Prolog.__super__.constructor.call(this, owningLevel, object);\n    this.addOneTimeListener('touchEnd', this._showProlog);\n  }\n\n  Level1Prolog.prototype._showProlog = function(event) {\n    mediator.dialogManager.showDialog(story[8]);\n    return mediator.homepageview.loadLevel('level3');\n  };\n\n  return Level1Prolog;\n\n})(Event);\n","var Event, MapChanger, mediator,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nEvent = require('entities/Event');\n\nmediator = Chaplin.mediator;\n\nmodule.exports = MapChanger = (function(_super) {\n  __extends(MapChanger, _super);\n\n  function MapChanger(owningLevel, object) {\n    this._changeMap = __bind(this._changeMap, this);\n    MapChanger.__super__.constructor.call(this, owningLevel, object);\n    this.addListener('touchBegin', this._changeMap);\n  }\n\n  MapChanger.prototype._changeMap = function(event) {\n    var body, config, _ref;\n    body = event[\"arguments\"][0];\n    if ((_ref = body.GetUserData().ent.name) === 'Player' || _ref === 'PlayerSkeleton') {\n      if (mediator.playWithSounds) {\n        mediator.soundManager.stopAll(config = {\n          sounds: true,\n          backgroundSounds: true\n        });\n      }\n      mediator.nextLevel = this.levelToChangeTo;\n      return mediator.publish('changeLvl');\n    }\n  };\n\n  return MapChanger;\n\n})(Event);\n","var Entity, Mario, Visual, mediator,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nEntity = require('core/Entity');\n\nVisual = require('components/Visual');\n\nmediator = Chaplin.mediator;\n\nmodule.exports = Mario = (function(_super) {\n  __extends(Mario, _super);\n\n  function Mario(owningLevel, object) {\n    this.update = __bind(this.update, this);\n    var v;\n    object.properties.physicsType = 'static';\n    Mario.__super__.constructor.call(this, owningLevel, object);\n    this.visual = v = new Visual(this);\n    (function(v) {\n      v.atlas.src = 'gameassets/atlases/mario.png';\n      v.spriteState.viewDirection = 2;\n      v.tileSet.tilesX = 3;\n      v.tileSet.tilesY = 4;\n      v.tileSet.tileheight = 32;\n      v.tileSet.tilewidth = 32;\n      return v.tileSet.offset = {\n        x: 14,\n        y: 24\n      };\n    })(v);\n  }\n\n  Mario.prototype.update = function() {\n    return Mario.__super__.update.apply(this, arguments);\n  };\n\n  return Mario;\n\n})(Entity);\n","var Entity, Player, Visual, mediator,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nEntity = require('core/Entity');\n\nVisual = require('components/Visual');\n\nmediator = Chaplin.mediator;\n\n/*\nThe Player\n*/\n\n\nmodule.exports = Player = (function(_super) {\n  __extends(Player, _super);\n\n  function Player(owningLevel, object) {\n    this.update = __bind(this.update, this);\n    this.onAction = __bind(this.onAction, this);\n    this.onTouchEnd = __bind(this.onTouchEnd, this);\n    this.onTouchBegin = __bind(this.onTouchBegin, this);\n    this.onTouch = __bind(this.onTouch, this);\n    var oldHeight, oldWidth;\n    object.properties.ellipse = true;\n    oldWidth = object.width;\n    oldHeight = object.height;\n    object.width = oldWidth / 2;\n    object.height = oldHeight / 2;\n    Player.__super__.constructor.call(this, owningLevel, object);\n    this.visual = new Visual(this);\n    this.size.x = oldWidth;\n    this.size.y = oldHeight;\n  }\n\n  Player.prototype.onTouch = function(otherBody, point, impulse) {\n    var physOwner;\n    if (this.physBody == null) {\n      return false;\n    }\n    if (otherBody.GetUserData() == null) {\n      return false;\n    }\n    physOwner = otherBody.GetUserData().ent;\n    if (physOwner != null ? physOwner.killed : void 0) {\n      return false;\n    } else {\n\n    }\n  };\n\n  Player.prototype.onTouchBegin = function(otherBody, point) {\n    var _ref;\n    this.touchingEntity = (_ref = otherBody.GetUserData()) != null ? _ref.ent : void 0;\n    return console.debug('Begin touching %O', this.touchingEntity);\n  };\n\n  Player.prototype.onTouchEnd = function(otherBody, point) {\n    console.debug('End touching %O', this.touchingEntity);\n    return this.touchingEntity = null;\n  };\n\n  Player.prototype.onAction = function() {\n    var _ref;\n    return (_ref = this.touchingEntity) != null ? _ref.onAction(this) : void 0;\n  };\n\n  Player.prototype.update = function() {\n    return Player.__super__.update.apply(this, arguments);\n  };\n\n  Player.prototype.onPositionChange = function() {\n    return mediator.soundManager.updateBackgroundSounds(this.position);\n  };\n\n  return Player;\n\n})(Entity);\n","var Entity, Movable, Scriptable, Visual, Yeti, mediator,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nEntity = require('core/Entity');\n\nVisual = require('components/Visual');\n\nMovable = require('components/Movable');\n\nScriptable = require('components/Scriptable');\n\nmediator = Chaplin.mediator;\n\nmodule.exports = Yeti = (function(_super) {\n  __extends(Yeti, _super);\n\n  function Yeti(owningLevel, object) {\n    this.onAction = __bind(this.onAction, this);\n    this.update = __bind(this.update, this);\n    this.onTouchEnd = __bind(this.onTouchEnd, this);\n    this.onTouch = __bind(this.onTouch, this);\n    this.onTouchBegin = __bind(this.onTouchBegin, this);\n    var oldHeight, oldWidth;\n    object.ellipse = true;\n    oldWidth = object.width;\n    oldHeight = object.height;\n    object.width = oldWidth / 2;\n    object.height = oldHeight / 2;\n    Yeti.__super__.constructor.call(this, owningLevel, object);\n    this.scriptable = new Scriptable(this);\n    this.visual = new Visual(this);\n    this.movable = new Movable(this);\n    this.movable.mount();\n    this.scriptable.mount();\n    this.visual.spriteState.viewDirection = 2;\n    this.size.x = oldWidth;\n    this.size.y = oldHeight;\n  }\n\n  Yeti.prototype.onTouchBegin = function(body, point) {\n    var _ref;\n    this.visual.spriteState.moving = true;\n    if (((_ref = body.GetUserData()) != null ? _ref.ent.name : void 0) === 'Player') {\n      return this.makeMeStatic();\n    }\n  };\n\n  Yeti.prototype.onTouch = function(body, point, impulse) {};\n\n  Yeti.prototype.onTouchEnd = function(body, point) {\n    var _ref;\n    this.visual.spriteState.moving = false;\n    if (((_ref = body.GetUserData()) != null ? _ref.ent.name : void 0) === 'Player') {\n      return this.makeMeDynamic();\n    }\n  };\n\n  Yeti.prototype.update = function() {\n    /*\n      synchronize the visial position with the physical one\n    */\n\n    return Yeti.__super__.update.apply(this, arguments);\n  };\n\n  Yeti.prototype.onAction = function(player) {\n    return mediator.dialogManager.showDialog({\n      \"text\": \"PIKACHU!!!\",\n      \"options\": [\"Yeah...right.\"]\n    });\n  };\n\n  return Yeti;\n\n})(Entity);\n","module.exports = {\n  Event: require('entities/Event'),\n  Gumba: require('entities/Gumba'),\n  MapChanger: require('entities/MapChanger'),\n  Mario: require('entities/Mario'),\n  Player: require('entities/Player'),\n  Yeti: require('entities/Yeti'),\n  Level1Prolog: require('entities/Level1Prolog'),\n  Level1NickTalking: require('entities/Level1NickTalking'),\n  Level1Event1: require('entities/Level1Event1')\n};\n","var Home, Model, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nModel = require('models/base/model');\n\nmodule.exports = Home = (function(_super) {\n  __extends(Home, _super);\n\n  function Home() {\n    _ref = Home.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  return Home;\n\n})(Model);\n","var Application, routes;\n\nApplication = require('application');\n\nroutes = require('routes');\n\n$(function() {\n  return new Application({\n    title: 'Nick Skeleton',\n    controllerSuffix: '-controller',\n    routes: routes\n  });\n});\n","var Chaplin, support, utils;\n\nChaplin = require('chaplin');\n\nutils = require('lib/utils');\n\nsupport = utils.beget(Chaplin.support);\n\nmodule.exports = support;\n","var Chaplin, utils;\n\nChaplin = require('chaplin');\n\nutils = Chaplin.utils.beget(Chaplin.utils);\n\nmodule.exports = utils;\n","var mediator,\n  __slice = [].slice;\n\nmediator = Chaplin.mediator;\n\nHandlebars.registerHelper('with', function(context, options) {\n  if (!context || Handlebars.Utils.isEmpty(context)) {\n    return options.inverse(this);\n  } else {\n    return options.fn(context);\n  }\n});\n\nHandlebars.registerHelper('without', function(context, options) {\n  var inverse;\n  inverse = options.inverse;\n  options.inverse = options.fn;\n  options.fn = inverse;\n  return Handlebars.helpers[\"with\"].call(this, context, options);\n});\n\nHandlebars.registerHelper('url', function() {\n  var params, routeName, url;\n  routeName = arguments[0], params = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n  url = null;\n  mediator.publish('!router:reverse', routeName, params, function(result) {\n    return url = result;\n  });\n  return \"/\" + url;\n});\n","var Model, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = Model = (function(_super) {\n  __extends(Model, _super);\n\n  function Model() {\n    _ref = Model.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  return Model;\n\n})(Chaplin.Model);\n","module.exports = function(match) {\n  match('', 'home#index');\n  match('index.html', 'home#index');\n  match('u/6045251/shiny-wight/index.html', 'home#index');\n  return match('shiny-wight/index.html', 'home#index');\n};\n","var Chaplin, CollectionView, View, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nChaplin = require('chaplin');\n\nView = require('views/base/view');\n\nmodule.exports = CollectionView = (function(_super) {\n  __extends(CollectionView, _super);\n\n  function CollectionView() {\n    _ref = CollectionView.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  CollectionView.prototype.getTemplateFunction = View.prototype.getTemplateFunction;\n\n  return CollectionView;\n\n})(Chaplin.CollectionView);\n","var View, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nrequire('lib/view-helper');\n\nmodule.exports = View = (function(_super) {\n  __extends(View, _super);\n\n  function View() {\n    _ref = View.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  View.prototype.getTemplateFunction = function() {\n    return this.template;\n  };\n\n  return View;\n\n})(Chaplin.View);\n","var DialogManager, HomePageView, InputManager, Level, PHYSICS_LOOP, RENDER_LOOP, SoundManager, Std, Vec2, View, mediator, _ref,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nView = require('views/base/view');\n\nInputManager = require('core/InputManager');\n\nSoundManager = require('core/SoundManager');\n\nDialogManager = require('core/DialogManager');\n\nmediator = Chaplin.mediator;\n\nStd = require('core/std');\n\nLevel = require('core/Level');\n\nVec2 = Box2D.Common.Math.b2Vec2;\n\nPHYSICS_LOOP = 1000 / 60;\n\nRENDER_LOOP = 1000 / 25;\n\nmodule.exports = HomePageView = (function(_super) {\n  __extends(HomePageView, _super);\n\n  function HomePageView() {\n    this.draw = __bind(this.draw, this);\n    this._handleAction = __bind(this._handleAction, this);\n    this.handleInput = __bind(this.handleInput, this);\n    this.doTheWork = __bind(this.doTheWork, this);\n    this.setup = __bind(this.setup, this);\n    this.loadNextLevels = __bind(this.loadNextLevels, this);\n    this.loadLevel = __bind(this.loadLevel, this);\n    _ref = HomePageView.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  HomePageView.prototype.autoRender = true;\n\n  HomePageView.prototype.className = 'home-page';\n\n  HomePageView.prototype.container = '#page-container';\n\n  HomePageView.prototype.initialize = function(options) {\n    var level, now,\n      _this = this;\n    HomePageView.__super__.initialize.apply(this, arguments);\n    if (debug) {\n      this.setupDatGui();\n    }\n    new Std();\n    mediator.homepageview = this;\n    this.handleAction = _.debounce(this._handleAction, 50, true);\n    this.canvas = document.getElementById('game-canvas');\n    this.ctx = this.canvas.getContext('2d');\n    if (debug) {\n      window.mediator = mediator;\n    }\n    if (mediator.playWithSounds) {\n      this.soundManager = new SoundManager();\n    }\n    this.inputManager = new InputManager();\n    this.dialogManager = new DialogManager();\n    now = Date.now();\n    this.lastPhysicsUpdate = now;\n    this.lastRenderUpdate = now;\n    this.subscribeEvent('changeLvl', function() {\n      console.debug('change to %s', mediator.nextLevel);\n      return _this.setup(mediator.nextLevel);\n    });\n    level = 'level1';\n    return this.loadLevel(level, function() {\n      _this.setup(level);\n      return window.requestAnimationFrame(_this.doTheWork);\n    });\n  };\n\n  HomePageView.prototype.loadLevel = function(level, callback) {\n    var _this = this;\n    if (mediator.levels[level] != null) {\n      if (typeof callback === \"function\") {\n        callback();\n      }\n      return;\n    }\n    return mediator.levels[level] = new Level(level, function() {\n      return typeof callback === \"function\" ? callback() : void 0;\n    });\n  };\n\n  HomePageView.prototype.loadNextLevels = function() {\n    var entity, _i, _len, _ref1, _results;\n    _ref1 = mediator.getActiveLevel().entityObjects;\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      entity = _ref1[_i];\n      if (entity.levelToChangeTo == null) {\n        continue;\n      }\n      _results.push(this.loadLevel(entity.levelToChangeTo));\n    }\n    return _results;\n  };\n\n  HomePageView.prototype.setup = function(level) {\n    var lvl,\n      _this = this;\n    lvl = mediator.levels[level];\n    if (lvl.loadCompleted) {\n      mediator.dialogManager.hideDialog();\n      mediator.activeLevel = level;\n      if (!lvl.setupped) {\n        lvl.setup();\n      }\n      if (mediator.playWithSounds) {\n        this.soundManager.startAll();\n      }\n      return this.loadNextLevels();\n    } else {\n      if (!mediator.dialogManager.isDialog()) {\n        mediator.dialogManager.showDialog({\n          text: \"Sorry, I still need to load some damn cool sound, so please hang in there!\"\n        });\n      }\n      return setTimeout(function() {\n        return _this.setup(level);\n      }, 500);\n    }\n  };\n\n  HomePageView.prototype.doTheWork = function() {\n    var lvl, renderDelte, timeNow, timeToRender;\n    window.requestAnimationFrame(this.doTheWork);\n    timeNow = Date.now();\n    lvl = mediator.getActiveLevel();\n    if (lvl == null) {\n      return;\n    }\n    while (this.lastPhysicsUpdate < timeNow) {\n      if (timeNow - this.lastPhysicsUpdate > 1000) {\n        this.lastPhysicsUpdate = timeNow;\n      } else {\n        this.handleInput();\n        lvl.updatePhysics();\n        lvl.update();\n        this.lastPhysicsUpdate += PHYSICS_LOOP;\n      }\n    }\n    renderDelte = timeNow - this.lastRenderUpdate - RENDER_LOOP;\n    if (renderDelte > 0) {\n      this.draw();\n      if (mediator.renderDebug) {\n        lvl.physicsManager.world.DrawDebugData();\n      }\n      this.lastRenderUpdate = timeNow;\n    }\n    if (debug) {\n      timeToRender = Date.now() - timeNow;\n      if (timeToRender > 40) {\n        return console.warn('Took %d ms to render frame.', timeToRender);\n      }\n    }\n  };\n\n  HomePageView.prototype.handleInput = function() {\n    var actions, moveDir, placeholder, player, _ref1;\n    actions = this.inputManager.get('actions');\n    moveDir = new Vec2(0, 0);\n    player = (_ref1 = mediator.getActiveLevel()) != null ? _ref1.player : void 0;\n    if (player == null) {\n      return;\n    }\n    if (actions['move-up']) {\n      moveDir.y -= 1;\n      player.visual.spriteState.viewDirection = 0;\n      if (mediator.dialogManager.isDialog()) {\n        mediator.dialogManager.moveSelectionUp();\n      }\n    }\n    if (actions['move-down']) {\n      moveDir.y += 1;\n      player.visual.spriteState.viewDirection = 2;\n      if (mediator.dialogManager.isDialog()) {\n        mediator.dialogManager.moveSelectionDown();\n      }\n    }\n    if (actions['move-left']) {\n      moveDir.x -= 1;\n      player.visual.spriteState.viewDirection = 3;\n    }\n    if (actions['move-right']) {\n      moveDir.x += 1;\n      player.visual.spriteState.viewDirection = 1;\n    }\n    if (actions['interact']) {\n      this.handleAction();\n    }\n    if (actions['cancel']) {\n      placeholder = true;\n    }\n    if (moveDir.LengthSquared() && !mediator.blockInput) {\n      moveDir.Normalize();\n      moveDir.Multiply(player.velocity);\n      player.physBody.SetLinearVelocity(moveDir);\n      if (mediator.playWithSounds) {\n        player.onPositionChange();\n      }\n      return player.visual.spriteState.moving = true;\n    } else {\n      player.physBody.SetLinearVelocity(new Vec2(0, 0));\n      return player.visual.spriteState.moving = false;\n    }\n  };\n\n  HomePageView.prototype._handleAction = function() {\n    var player;\n    if (mediator.dialogManager.isDialog()) {\n      return mediator.dialogManager.chooseCurrentSelection();\n    } else {\n      player = mediator.getActiveLevel().player;\n      return player.onAction();\n    }\n  };\n\n  HomePageView.prototype.draw = function() {\n    var dh, dw, dx, dy, entity, lvl, numXTiles, numYTiles, pixelSize, pos, radiusOfSight, sh, sw, sx, sy, tileSize, _i, _len, _ref1;\n    lvl = mediator.getActiveLevel();\n    numXTiles = lvl.mapTiledObject.width;\n    numYTiles = lvl.mapTiledObject.height;\n    tileSize = {\n      x: lvl.mapTiledObject.tileheight,\n      y: lvl.mapTiledObject.tilewidth\n    };\n    pixelSize = {\n      x: numXTiles * tileSize.x,\n      y: numYTiles * tileSize.y\n    };\n    pos = lvl.player.position;\n    radiusOfSight = 6 * tileSize.x;\n    sx = pos.x - radiusOfSight;\n    sy = pos.y - radiusOfSight;\n    sw = dw = sh = dh = radiusOfSight * 2 + tileSize.x;\n    dx = 0;\n    dy = 0;\n    if (sx + sw > pixelSize.x) {\n      sx = pixelSize.x - sw;\n    }\n    if (sy + sh > pixelSize.y) {\n      sy = pixelSize.y - sh;\n    }\n    if (sx < 0) {\n      sx = 0;\n    }\n    if (sy < 0) {\n      sy = 0;\n    }\n    if (sw - sx > pixelSize.x) {\n      sw = dw = pixelSize.x;\n    }\n    if (sh - sy > pixelSize.y) {\n      sh = dh = pixelSize.y;\n    }\n    this.canvas.width = sw;\n    this.canvas.height = sh;\n    this.ctx.drawImage(lvl.mapCanvas, sx, sy, sw, sh, dx, dy, dw, dh);\n    _ref1 = lvl.entityObjects;\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      entity = _ref1[_i];\n      if (entity.visual != null) {\n        entity.visual.render(this.ctx, sx, sy);\n      }\n    }\n    return lvl.player.visual.render(this.ctx, sx, sy);\n  };\n\n  HomePageView.prototype.setupDatGui = function() {\n    var activeLevel, blockInput, disableDialogs, gui, playWithSounds, renderDebug;\n    gui = new dat.GUI();\n    gui.remember(mediator);\n    activeLevel = gui.add({\n      activeLevel: ''\n    }, 'activeLevel');\n    playWithSounds = gui.add(mediator, 'playWithSounds');\n    blockInput = gui.add(mediator, 'blockInput');\n    renderDebug = gui.add(mediator, 'renderDebug');\n    disableDialogs = gui.add(mediator, 'disableDialogs');\n    activeLevel.listen();\n    playWithSounds.listen();\n    blockInput.listen();\n    renderDebug.listen();\n    disableDialogs.listen();\n    return activeLevel.onFinishChange(function(value) {\n      var config;\n      if (mediator.playWithSounds) {\n        mediator.soundManager.stopAll(config = {\n          themeSound: true,\n          backgroundSounds: true,\n          sounds: true\n        });\n      }\n      return mediator.homepageview.loadLevel(value, function() {\n        return mediator.homepageview.setup(value);\n      });\n    });\n  };\n\n  return HomePageView;\n\n})(View);\n"]}