{"version":3,"file":"public/test/javascripts/test.js","sources":["test/models/Entity-test.coffee","test/models/InputManager-test.coffee","test/models/Player-test.coffee","test/models/TILEDMap-test.coffee","test/models/home-test.coffee","test/test-helpers.coffee","test/views/home-page-view-test.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;;A","sourcesContent":["var Entity;\n\nEntity = require('models/Entity');\n\ndescribe('Entity', function() {\n  return beforeEach(function() {\n    return this.model = new Entity();\n  });\n});\n","var InputManager;\n\nInputManager = require('models/InputManager');\n\ndescribe('InputManager', function() {\n  return beforeEach(function() {\n    return this.model = new InputManager();\n  });\n});\n","var Player;\n\nPlayer = require('models/Player');\n\ndescribe('Player', function() {\n  return beforeEach(function() {\n    return this.model = new Player();\n  });\n});\n","var TILEDMap;\n\nTILEDMap = require('models/TILEDMap');\n\ndescribe('TILEDMap', function() {\n  return beforeEach(function() {\n    return this.model = new TILEDMap();\n  });\n});\n","var Home;\n\nHome = require('models/home');\n\ndescribe('Home', function() {\n  return beforeEach(function() {\n    return this.model = new Home();\n  });\n});\n","var chai, sinonChai;\n\nchai = require('chai');\n\nsinonChai = require('sinon-chai');\n\nchai.use(sinonChai);\n\nmodule.exports = {\n  expect: chai.expect,\n  sinon: require('sinon')\n};\n","var HomePageView;\n\nHomePageView = require('views/home-page-view');\n\ndescribe('HomePageView', function() {\n  beforeEach(function() {\n    return this.view = new HomePageView;\n  });\n  afterEach(function() {\n    return this.view.dispose();\n  });\n  return it('should auto-render', function() {\n    return expect(this.view.$el.find('img')).to.have.length(1);\n  });\n});\n"]}